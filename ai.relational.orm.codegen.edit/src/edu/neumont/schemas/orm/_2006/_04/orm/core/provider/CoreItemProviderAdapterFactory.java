/**
 */
package edu.neumont.schemas.orm._2006._04.orm.core.provider;

import edu.neumont.schemas.orm._2006._04.orm.core.util.CoreAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class CoreItemProviderAdapterFactory extends CoreAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public CoreItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.AggregationContextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregationContextTypeItemProvider aggregationContextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.AggregationContextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregationContextTypeAdapter() {
		if (aggregationContextTypeItemProvider == null) {
			aggregationContextTypeItemProvider = new AggregationContextTypeItemProvider(this);
		}

		return aggregationContextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.AliasesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AliasesTypeItemProvider aliasesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.AliasesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAliasesTypeAdapter() {
		if (aliasesTypeItemProvider == null) {
			aliasesTypeItemProvider = new AliasesTypeItemProvider(this);
		}

		return aliasesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.AliasType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AliasTypeItemProvider aliasTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.AliasType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAliasTypeAdapter() {
		if (aliasTypeItemProvider == null) {
			aliasTypeItemProvider = new AliasTypeItemProvider(this);
		}

		return aliasTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.AutoCounterNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutoCounterNumericDataTypeTypeItemProvider autoCounterNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.AutoCounterNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutoCounterNumericDataTypeTypeAdapter() {
		if (autoCounterNumericDataTypeTypeItemProvider == null) {
			autoCounterNumericDataTypeTypeItemProvider = new AutoCounterNumericDataTypeTypeItemProvider(this);
		}

		return autoCounterNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.AutoTimestampTemporalDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutoTimestampTemporalDataTypeTypeItemProvider autoTimestampTemporalDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.AutoTimestampTemporalDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutoTimestampTemporalDataTypeTypeAdapter() {
		if (autoTimestampTemporalDataTypeTypeItemProvider == null) {
			autoTimestampTemporalDataTypeTypeItemProvider = new AutoTimestampTemporalDataTypeTypeItemProvider(this);
		}

		return autoTimestampTemporalDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.BoundToType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BoundToTypeItemProvider boundToTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.BoundToType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBoundToTypeAdapter() {
		if (boundToTypeItemProvider == null) {
			boundToTypeItemProvider = new BoundToTypeItemProvider(this);
		}

		return boundToTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueMustBeConsumedErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedPathValueMustBeConsumedErrorTypeItemProvider calculatedPathValueMustBeConsumedErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueMustBeConsumedErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedPathValueMustBeConsumedErrorTypeAdapter() {
		if (calculatedPathValueMustBeConsumedErrorTypeItemProvider == null) {
			calculatedPathValueMustBeConsumedErrorTypeItemProvider = new CalculatedPathValueMustBeConsumedErrorTypeItemProvider(this);
		}

		return calculatedPathValueMustBeConsumedErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueParameterBindingErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedPathValueParameterBindingErrorTypeItemProvider calculatedPathValueParameterBindingErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueParameterBindingErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedPathValueParameterBindingErrorTypeAdapter() {
		if (calculatedPathValueParameterBindingErrorTypeItemProvider == null) {
			calculatedPathValueParameterBindingErrorTypeItemProvider = new CalculatedPathValueParameterBindingErrorTypeItemProvider(this);
		}

		return calculatedPathValueParameterBindingErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueRequiresAggregationContextErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedPathValueRequiresAggregationContextErrorTypeItemProvider calculatedPathValueRequiresAggregationContextErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueRequiresAggregationContextErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedPathValueRequiresAggregationContextErrorTypeAdapter() {
		if (calculatedPathValueRequiresAggregationContextErrorTypeItemProvider == null) {
			calculatedPathValueRequiresAggregationContextErrorTypeItemProvider = new CalculatedPathValueRequiresAggregationContextErrorTypeItemProvider(this);
		}

		return calculatedPathValueRequiresAggregationContextErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueRequiresFunctionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedPathValueRequiresFunctionErrorTypeItemProvider calculatedPathValueRequiresFunctionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedPathValueRequiresFunctionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedPathValueRequiresFunctionErrorTypeAdapter() {
		if (calculatedPathValueRequiresFunctionErrorTypeItemProvider == null) {
			calculatedPathValueRequiresFunctionErrorTypeItemProvider = new CalculatedPathValueRequiresFunctionErrorTypeItemProvider(this);
		}

		return calculatedPathValueRequiresFunctionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueInputType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedValueInputTypeItemProvider calculatedValueInputTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueInputType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedValueInputTypeAdapter() {
		if (calculatedValueInputTypeItemProvider == null) {
			calculatedValueInputTypeItemProvider = new CalculatedValueInputTypeItemProvider(this);
		}

		return calculatedValueInputTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedValueRefItemProvider calculatedValueRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedValueRefAdapter() {
		if (calculatedValueRefItemProvider == null) {
			calculatedValueRefItemProvider = new CalculatedValueRefItemProvider(this);
		}

		return calculatedValueRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValuesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedValuesTypeItemProvider calculatedValuesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValuesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedValuesTypeAdapter() {
		if (calculatedValuesTypeItemProvider == null) {
			calculatedValuesTypeItemProvider = new CalculatedValuesTypeItemProvider(this);
		}

		return calculatedValuesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValuesType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedValuesType1ItemProvider calculatedValuesType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValuesType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedValuesType1Adapter() {
		if (calculatedValuesType1ItemProvider == null) {
			calculatedValuesType1ItemProvider = new CalculatedValuesType1ItemProvider(this);
		}

		return calculatedValuesType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedValueTypeItemProvider calculatedValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedValueTypeAdapter() {
		if (calculatedValueTypeItemProvider == null) {
			calculatedValueTypeItemProvider = new CalculatedValueTypeItemProvider(this);
		}

		return calculatedValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalculatedValueType1ItemProvider calculatedValueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CalculatedValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalculatedValueType1Adapter() {
		if (calculatedValueType1ItemProvider == null) {
			calculatedValueType1ItemProvider = new CalculatedValueType1ItemProvider(this);
		}

		return calculatedValueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardinalityConstraintRefItemProvider cardinalityConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardinalityConstraintRefAdapter() {
		if (cardinalityConstraintRefItemProvider == null) {
			cardinalityConstraintRefItemProvider = new CardinalityConstraintRefItemProvider(this);
		}

		return cardinalityConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardinalityConstraintTypeItemProvider cardinalityConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardinalityConstraintTypeAdapter() {
		if (cardinalityConstraintTypeItemProvider == null) {
			cardinalityConstraintTypeItemProvider = new CardinalityConstraintTypeItemProvider(this);
		}

		return cardinalityConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityRangeOverlapErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardinalityRangeOverlapErrorTypeItemProvider cardinalityRangeOverlapErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityRangeOverlapErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardinalityRangeOverlapErrorTypeAdapter() {
		if (cardinalityRangeOverlapErrorTypeItemProvider == null) {
			cardinalityRangeOverlapErrorTypeItemProvider = new CardinalityRangeOverlapErrorTypeItemProvider(this);
		}

		return cardinalityRangeOverlapErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityRangesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardinalityRangesTypeItemProvider cardinalityRangesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityRangesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardinalityRangesTypeAdapter() {
		if (cardinalityRangesTypeItemProvider == null) {
			cardinalityRangesTypeItemProvider = new CardinalityRangesTypeItemProvider(this);
		}

		return cardinalityRangesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityRangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CardinalityRangeTypeItemProvider cardinalityRangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CardinalityRangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCardinalityRangeTypeAdapter() {
		if (cardinalityRangeTypeItemProvider == null) {
			cardinalityRangeTypeItemProvider = new CardinalityRangeTypeItemProvider(this);
		}

		return cardinalityRangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CompatibleRolePlayerTypeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompatibleRolePlayerTypeErrorTypeItemProvider compatibleRolePlayerTypeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CompatibleRolePlayerTypeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompatibleRolePlayerTypeErrorTypeAdapter() {
		if (compatibleRolePlayerTypeErrorTypeItemProvider == null) {
			compatibleRolePlayerTypeErrorTypeItemProvider = new CompatibleRolePlayerTypeErrorTypeItemProvider(this);
		}

		return compatibleRolePlayerTypeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CompatibleSupertypesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompatibleSupertypesErrorTypeItemProvider compatibleSupertypesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CompatibleSupertypesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompatibleSupertypesErrorTypeAdapter() {
		if (compatibleSupertypesErrorTypeItemProvider == null) {
			compatibleSupertypesErrorTypeItemProvider = new CompatibleSupertypesErrorTypeItemProvider(this);
		}

		return compatibleSupertypesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CompatibleValueTypeInstanceValueErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompatibleValueTypeInstanceValueErrorTypeItemProvider compatibleValueTypeInstanceValueErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CompatibleValueTypeInstanceValueErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompatibleValueTypeInstanceValueErrorTypeAdapter() {
		if (compatibleValueTypeInstanceValueErrorTypeItemProvider == null) {
			compatibleValueTypeInstanceValueErrorTypeItemProvider = new CompatibleValueTypeInstanceValueErrorTypeItemProvider(this);
		}

		return compatibleValueTypeInstanceValueErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConditionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionsTypeItemProvider conditionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConditionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionsTypeAdapter() {
		if (conditionsTypeItemProvider == null) {
			conditionsTypeItemProvider = new ConditionsTypeItemProvider(this);
		}

		return conditionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintDuplicateNameErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintDuplicateNameErrorTypeItemProvider constraintDuplicateNameErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintDuplicateNameErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintDuplicateNameErrorTypeAdapter() {
		if (constraintDuplicateNameErrorTypeItemProvider == null) {
			constraintDuplicateNameErrorTypeItemProvider = new ConstraintDuplicateNameErrorTypeItemProvider(this);
		}

		return constraintDuplicateNameErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleProjectionRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleProjectionRefItemProvider constraintRoleProjectionRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleProjectionRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleProjectionRefAdapter() {
		if (constraintRoleProjectionRefItemProvider == null) {
			constraintRoleProjectionRefItemProvider = new ConstraintRoleProjectionRefItemProvider(this);
		}

		return constraintRoleProjectionRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleProjectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleProjectionTypeItemProvider constraintRoleProjectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleProjectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleProjectionTypeAdapter() {
		if (constraintRoleProjectionTypeItemProvider == null) {
			constraintRoleProjectionTypeItemProvider = new ConstraintRoleProjectionTypeItemProvider(this);
		}

		return constraintRoleProjectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceJoinPathRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequenceJoinPathRefItemProvider constraintRoleSequenceJoinPathRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceJoinPathRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequenceJoinPathRefAdapter() {
		if (constraintRoleSequenceJoinPathRefItemProvider == null) {
			constraintRoleSequenceJoinPathRefItemProvider = new ConstraintRoleSequenceJoinPathRefItemProvider(this);
		}

		return constraintRoleSequenceJoinPathRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceJoinPathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequenceJoinPathTypeItemProvider constraintRoleSequenceJoinPathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceJoinPathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequenceJoinPathTypeAdapter() {
		if (constraintRoleSequenceJoinPathTypeItemProvider == null) {
			constraintRoleSequenceJoinPathTypeItemProvider = new ConstraintRoleSequenceJoinPathTypeItemProvider(this);
		}

		return constraintRoleSequenceJoinPathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequenceRefItemProvider constraintRoleSequenceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequenceRefAdapter() {
		if (constraintRoleSequenceRefItemProvider == null) {
			constraintRoleSequenceRefItemProvider = new ConstraintRoleSequenceRefItemProvider(this);
		}

		return constraintRoleSequenceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequencesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequencesTypeItemProvider constraintRoleSequencesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequencesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequencesTypeAdapter() {
		if (constraintRoleSequencesTypeItemProvider == null) {
			constraintRoleSequencesTypeItemProvider = new ConstraintRoleSequencesTypeItemProvider(this);
		}

		return constraintRoleSequencesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequenceTypeItemProvider constraintRoleSequenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequenceTypeAdapter() {
		if (constraintRoleSequenceTypeItemProvider == null) {
			constraintRoleSequenceTypeItemProvider = new ConstraintRoleSequenceTypeItemProvider(this);
		}

		return constraintRoleSequenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceWithJoinAndIdType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequenceWithJoinAndIdTypeItemProvider constraintRoleSequenceWithJoinAndIdTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceWithJoinAndIdType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequenceWithJoinAndIdTypeAdapter() {
		if (constraintRoleSequenceWithJoinAndIdTypeItemProvider == null) {
			constraintRoleSequenceWithJoinAndIdTypeItemProvider = new ConstraintRoleSequenceWithJoinAndIdTypeItemProvider(this);
		}

		return constraintRoleSequenceWithJoinAndIdTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceWithJoinType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintRoleSequenceWithJoinTypeItemProvider constraintRoleSequenceWithJoinTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintRoleSequenceWithJoinType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintRoleSequenceWithJoinTypeAdapter() {
		if (constraintRoleSequenceWithJoinTypeItemProvider == null) {
			constraintRoleSequenceWithJoinTypeItemProvider = new ConstraintRoleSequenceWithJoinTypeItemProvider(this);
		}

		return constraintRoleSequenceWithJoinTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsTypeItemProvider constraintsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsTypeAdapter() {
		if (constraintsTypeItemProvider == null) {
			constraintsTypeItemProvider = new ConstraintsTypeItemProvider(this);
		}

		return constraintsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsType1ItemProvider constraintsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsType1Adapter() {
		if (constraintsType1ItemProvider == null) {
			constraintsType1ItemProvider = new ConstraintsType1ItemProvider(this);
		}

		return constraintsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsType2ItemProvider constraintsType2ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsType2Adapter() {
		if (constraintsType2ItemProvider == null) {
			constraintsType2ItemProvider = new ConstraintsType2ItemProvider(this);
		}

		return constraintsType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsType3ItemProvider constraintsType3ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsType3Adapter() {
		if (constraintsType3ItemProvider == null) {
			constraintsType3ItemProvider = new ConstraintsType3ItemProvider(this);
		}

		return constraintsType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsType4ItemProvider constraintsType4ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsType4Adapter() {
		if (constraintsType4ItemProvider == null) {
			constraintsType4ItemProvider = new ConstraintsType4ItemProvider(this);
		}

		return constraintsType4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType5} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstraintsType5ItemProvider constraintsType5ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ConstraintsType5}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstraintsType5Adapter() {
		if (constraintsType5ItemProvider == null) {
			constraintsType5ItemProvider = new ConstraintsType5ItemProvider(this);
		}

		return constraintsType5ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CorrelatedPathRoleRequiresCompatibleRolePlayerErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CorrelatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider correlatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CorrelatedPathRoleRequiresCompatibleRolePlayerErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCorrelatedPathRoleRequiresCompatibleRolePlayerErrorTypeAdapter() {
		if (correlatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider == null) {
			correlatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider = new CorrelatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider(this);
		}

		return correlatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CustomReferenceModesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomReferenceModesTypeItemProvider customReferenceModesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CustomReferenceModesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomReferenceModesTypeAdapter() {
		if (customReferenceModesTypeItemProvider == null) {
			customReferenceModesTypeItemProvider = new CustomReferenceModesTypeItemProvider(this);
		}

		return customReferenceModesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.CustomReferenceModeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomReferenceModeTypeItemProvider customReferenceModeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.CustomReferenceModeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomReferenceModeTypeAdapter() {
		if (customReferenceModeTypeItemProvider == null) {
			customReferenceModeTypeItemProvider = new CustomReferenceModeTypeItemProvider(this);
		}

		return customReferenceModeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypeNotSpecifiedErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeNotSpecifiedErrorTypeItemProvider dataTypeNotSpecifiedErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypeNotSpecifiedErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeNotSpecifiedErrorTypeAdapter() {
		if (dataTypeNotSpecifiedErrorTypeItemProvider == null) {
			dataTypeNotSpecifiedErrorTypeItemProvider = new DataTypeNotSpecifiedErrorTypeItemProvider(this);
		}

		return dataTypeNotSpecifiedErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeRefItemProvider dataTypeRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeRefAdapter() {
		if (dataTypeRefItemProvider == null) {
			dataTypeRefItemProvider = new DataTypeRefItemProvider(this);
		}

		return dataTypeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypeRefRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypeRefRefItemProvider dataTypeRefRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypeRefRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypeRefRefAdapter() {
		if (dataTypeRefRefItemProvider == null) {
			dataTypeRefRefItemProvider = new DataTypeRefRefItemProvider(this);
		}

		return dataTypeRefRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataTypesTypeItemProvider dataTypesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DataTypesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataTypesTypeAdapter() {
		if (dataTypesTypeItemProvider == null) {
			dataTypesTypeItemProvider = new DataTypesTypeItemProvider(this);
		}

		return dataTypesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DateAndTimeTemporalDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateAndTimeTemporalDataTypeTypeItemProvider dateAndTimeTemporalDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DateAndTimeTemporalDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateAndTimeTemporalDataTypeTypeAdapter() {
		if (dateAndTimeTemporalDataTypeTypeItemProvider == null) {
			dateAndTimeTemporalDataTypeTypeItemProvider = new DateAndTimeTemporalDataTypeTypeItemProvider(this);
		}

		return dateAndTimeTemporalDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DateTemporalDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DateTemporalDataTypeTypeItemProvider dateTemporalDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DateTemporalDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDateTemporalDataTypeTypeAdapter() {
		if (dateTemporalDataTypeTypeItemProvider == null) {
			dateTemporalDataTypeTypeItemProvider = new DateTemporalDataTypeTypeItemProvider(this);
		}

		return dateTemporalDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DecimalNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalNumericDataTypeTypeItemProvider decimalNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DecimalNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalNumericDataTypeTypeAdapter() {
		if (decimalNumericDataTypeTypeItemProvider == null) {
			decimalNumericDataTypeTypeItemProvider = new DecimalNumericDataTypeTypeItemProvider(this);
		}

		return decimalNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DefinitionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionsTypeItemProvider definitionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DefinitionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionsTypeAdapter() {
		if (definitionsTypeItemProvider == null) {
			definitionsTypeItemProvider = new DefinitionsTypeItemProvider(this);
		}

		return definitionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DefinitionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionTypeItemProvider definitionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DefinitionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionTypeAdapter() {
		if (definitionTypeItemProvider == null) {
			definitionTypeItemProvider = new DefinitionTypeItemProvider(this);
		}

		return definitionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationExpressionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivationExpressionTypeItemProvider derivationExpressionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationExpressionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivationExpressionTypeAdapter() {
		if (derivationExpressionTypeItemProvider == null) {
			derivationExpressionTypeItemProvider = new DerivationExpressionTypeItemProvider(this);
		}

		return derivationExpressionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationProjectionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivationProjectionsTypeItemProvider derivationProjectionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationProjectionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivationProjectionsTypeAdapter() {
		if (derivationProjectionsTypeItemProvider == null) {
			derivationProjectionsTypeItemProvider = new DerivationProjectionsTypeItemProvider(this);
		}

		return derivationProjectionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationProjectionsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivationProjectionsType1ItemProvider derivationProjectionsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationProjectionsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivationProjectionsType1Adapter() {
		if (derivationProjectionsType1ItemProvider == null) {
			derivationProjectionsType1ItemProvider = new DerivationProjectionsType1ItemProvider(this);
		}

		return derivationProjectionsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationSourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivationSourceTypeItemProvider derivationSourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationSourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivationSourceTypeAdapter() {
		if (derivationSourceTypeItemProvider == null) {
			derivationSourceTypeItemProvider = new DerivationSourceTypeItemProvider(this);
		}

		return derivationSourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationSourceType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivationSourceType1ItemProvider derivationSourceType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivationSourceType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivationSourceType1Adapter() {
		if (derivationSourceType1ItemProvider == null) {
			derivationSourceType1ItemProvider = new DerivationSourceType1ItemProvider(this);
		}

		return derivationSourceType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivedFactTypeRoleProjectionCompatibilityErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider derivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivedFactTypeRoleProjectionCompatibilityErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedFactTypeRoleProjectionCompatibilityErrorTypeAdapter() {
		if (derivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider == null) {
			derivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider = new DerivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider(this);
		}

		return derivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivedRoleProjectionRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedRoleProjectionRefItemProvider derivedRoleProjectionRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivedRoleProjectionRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedRoleProjectionRefAdapter() {
		if (derivedRoleProjectionRefItemProvider == null) {
			derivedRoleProjectionRefItemProvider = new DerivedRoleProjectionRefItemProvider(this);
		}

		return derivedRoleProjectionRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivedRoleProjectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DerivedRoleProjectionTypeItemProvider derivedRoleProjectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DerivedRoleProjectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDerivedRoleProjectionTypeAdapter() {
		if (derivedRoleProjectionTypeItemProvider == null) {
			derivedRoleProjectionTypeItemProvider = new DerivedRoleProjectionTypeItemProvider(this);
		}

		return derivedRoleProjectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DoublePrecisionFloatingPointNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoublePrecisionFloatingPointNumericDataTypeTypeItemProvider doublePrecisionFloatingPointNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DoublePrecisionFloatingPointNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoublePrecisionFloatingPointNumericDataTypeTypeAdapter() {
		if (doublePrecisionFloatingPointNumericDataTypeTypeItemProvider == null) {
			doublePrecisionFloatingPointNumericDataTypeTypeItemProvider = new DoublePrecisionFloatingPointNumericDataTypeTypeItemProvider(this);
		}

		return doublePrecisionFloatingPointNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DuplicateReadingSignatureErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DuplicateReadingSignatureErrorTypeItemProvider duplicateReadingSignatureErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DuplicateReadingSignatureErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDuplicateReadingSignatureErrorTypeAdapter() {
		if (duplicateReadingSignatureErrorTypeItemProvider == null) {
			duplicateReadingSignatureErrorTypeItemProvider = new DuplicateReadingSignatureErrorTypeItemProvider(this);
		}

		return duplicateReadingSignatureErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.DynamicColorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicColorTypeItemProvider dynamicColorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.DynamicColorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicColorTypeAdapter() {
		if (dynamicColorTypeItemProvider == null) {
			dynamicColorTypeItemProvider = new DynamicColorTypeItemProvider(this);
		}

		return dynamicColorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ElementRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ElementRefItemProvider elementRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ElementRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createElementRefAdapter() {
		if (elementRefItemProvider == null) {
			elementRefItemProvider = new ElementRefItemProvider(this);
		}

		return elementRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeInstanceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeInstanceRefItemProvider entityTypeInstanceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeInstanceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeInstanceRefAdapter() {
		if (entityTypeInstanceRefItemProvider == null) {
			entityTypeInstanceRefItemProvider = new EntityTypeInstanceRefItemProvider(this);
		}

		return entityTypeInstanceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeInstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeInstancesTypeItemProvider entityTypeInstancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeInstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeInstancesTypeAdapter() {
		if (entityTypeInstancesTypeItemProvider == null) {
			entityTypeInstancesTypeItemProvider = new EntityTypeInstancesTypeItemProvider(this);
		}

		return entityTypeInstancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeInstanceTypeItemProvider entityTypeInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeInstanceTypeAdapter() {
		if (entityTypeInstanceTypeItemProvider == null) {
			entityTypeInstanceTypeItemProvider = new EntityTypeInstanceTypeItemProvider(this);
		}

		return entityTypeInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeRequiresReferenceSchemeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeRequiresReferenceSchemeErrorTypeItemProvider entityTypeRequiresReferenceSchemeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeRequiresReferenceSchemeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeRequiresReferenceSchemeErrorTypeAdapter() {
		if (entityTypeRequiresReferenceSchemeErrorTypeItemProvider == null) {
			entityTypeRequiresReferenceSchemeErrorTypeItemProvider = new EntityTypeRequiresReferenceSchemeErrorTypeItemProvider(this);
		}

		return entityTypeRequiresReferenceSchemeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeRoleInstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeRoleInstancesTypeItemProvider entityTypeRoleInstancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeRoleInstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeRoleInstancesTypeAdapter() {
		if (entityTypeRoleInstancesTypeItemProvider == null) {
			entityTypeRoleInstancesTypeItemProvider = new EntityTypeRoleInstancesTypeItemProvider(this);
		}

		return entityTypeRoleInstancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeSubtypeInstanceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeSubtypeInstanceRefItemProvider entityTypeSubtypeInstanceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeSubtypeInstanceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeSubtypeInstanceRefAdapter() {
		if (entityTypeSubtypeInstanceRefItemProvider == null) {
			entityTypeSubtypeInstanceRefItemProvider = new EntityTypeSubtypeInstanceRefItemProvider(this);
		}

		return entityTypeSubtypeInstanceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeSubtypeInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeSubtypeInstanceTypeItemProvider entityTypeSubtypeInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeSubtypeInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeSubtypeInstanceTypeAdapter() {
		if (entityTypeSubtypeInstanceTypeItemProvider == null) {
			entityTypeSubtypeInstanceTypeItemProvider = new EntityTypeSubtypeInstanceTypeItemProvider(this);
		}

		return entityTypeSubtypeInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityTypeTypeItemProvider entityTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EntityTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityTypeTypeAdapter() {
		if (entityTypeTypeItemProvider == null) {
			entityTypeTypeItemProvider = new EntityTypeTypeItemProvider(this);
		}

		return entityTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityConstraintImpliedByMandatoryConstraintsErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider equalityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityConstraintImpliedByMandatoryConstraintsErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualityConstraintImpliedByMandatoryConstraintsErrorTypeAdapter() {
		if (equalityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider == null) {
			equalityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider = new EqualityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider(this);
		}

		return equalityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualityConstraintRefItemProvider equalityConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualityConstraintRefAdapter() {
		if (equalityConstraintRefItemProvider == null) {
			equalityConstraintRefItemProvider = new EqualityConstraintRefItemProvider(this);
		}

		return equalityConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualityConstraintTypeItemProvider equalityConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualityConstraintTypeAdapter() {
		if (equalityConstraintTypeItemProvider == null) {
			equalityConstraintTypeItemProvider = new EqualityConstraintTypeItemProvider(this);
		}

		return equalityConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityImpliedByMandatoryErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualityImpliedByMandatoryErrorTypeItemProvider equalityImpliedByMandatoryErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.EqualityImpliedByMandatoryErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualityImpliedByMandatoryErrorTypeAdapter() {
		if (equalityImpliedByMandatoryErrorTypeItemProvider == null) {
			equalityImpliedByMandatoryErrorTypeItemProvider = new EqualityImpliedByMandatoryErrorTypeItemProvider(this);
		}

		return equalityImpliedByMandatoryErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusionConstraintRefItemProvider exclusionConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusionConstraintRefAdapter() {
		if (exclusionConstraintRefItemProvider == null) {
			exclusionConstraintRefItemProvider = new ExclusionConstraintRefItemProvider(this);
		}

		return exclusionConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusionConstraintTypeItemProvider exclusionConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusionConstraintTypeAdapter() {
		if (exclusionConstraintTypeItemProvider == null) {
			exclusionConstraintTypeItemProvider = new ExclusionConstraintTypeItemProvider(this);
		}

		return exclusionConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionContradictsEqualityErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusionContradictsEqualityErrorTypeItemProvider exclusionContradictsEqualityErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionContradictsEqualityErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusionContradictsEqualityErrorTypeAdapter() {
		if (exclusionContradictsEqualityErrorTypeItemProvider == null) {
			exclusionContradictsEqualityErrorTypeItemProvider = new ExclusionContradictsEqualityErrorTypeItemProvider(this);
		}

		return exclusionContradictsEqualityErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionContradictsMandatoryErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusionContradictsMandatoryErrorTypeItemProvider exclusionContradictsMandatoryErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionContradictsMandatoryErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusionContradictsMandatoryErrorTypeAdapter() {
		if (exclusionContradictsMandatoryErrorTypeItemProvider == null) {
			exclusionContradictsMandatoryErrorTypeItemProvider = new ExclusionContradictsMandatoryErrorTypeItemProvider(this);
		}

		return exclusionContradictsMandatoryErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionContradictsSubsetErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExclusionContradictsSubsetErrorTypeItemProvider exclusionContradictsSubsetErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExclusionContradictsSubsetErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExclusionContradictsSubsetErrorTypeAdapter() {
		if (exclusionContradictsSubsetErrorTypeItemProvider == null) {
			exclusionContradictsSubsetErrorTypeItemProvider = new ExclusionContradictsSubsetErrorTypeItemProvider(this);
		}

		return exclusionContradictsSubsetErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExpandedDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExpandedDataTypeItemProvider expandedDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExpandedDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExpandedDataTypeAdapter() {
		if (expandedDataTypeItemProvider == null) {
			expandedDataTypeItemProvider = new ExpandedDataTypeItemProvider(this);
		}

		return expandedDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExtensionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExtensionsTypeItemProvider extensionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExtensionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExtensionsTypeAdapter() {
		if (extensionsTypeItemProvider == null) {
			extensionsTypeItemProvider = new ExtensionsTypeItemProvider(this);
		}

		return extensionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ExternalConstraintRoleSequenceArityMismatchErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalConstraintRoleSequenceArityMismatchErrorTypeItemProvider externalConstraintRoleSequenceArityMismatchErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ExternalConstraintRoleSequenceArityMismatchErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalConstraintRoleSequenceArityMismatchErrorTypeAdapter() {
		if (externalConstraintRoleSequenceArityMismatchErrorTypeItemProvider == null) {
			externalConstraintRoleSequenceArityMismatchErrorTypeItemProvider = new ExternalConstraintRoleSequenceArityMismatchErrorTypeItemProvider(this);
		}

		return externalConstraintRoleSequenceArityMismatchErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactRolesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactRolesTypeItemProvider factRolesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactRolesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactRolesTypeAdapter() {
		if (factRolesTypeItemProvider == null) {
			factRolesTypeItemProvider = new FactRolesTypeItemProvider(this);
		}

		return factRolesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationExpressionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeDerivationExpressionTypeItemProvider factTypeDerivationExpressionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationExpressionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeDerivationExpressionTypeAdapter() {
		if (factTypeDerivationExpressionTypeItemProvider == null) {
			factTypeDerivationExpressionTypeItemProvider = new FactTypeDerivationExpressionTypeItemProvider(this);
		}

		return factTypeDerivationExpressionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationPathRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeDerivationPathRefItemProvider factTypeDerivationPathRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationPathRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeDerivationPathRefAdapter() {
		if (factTypeDerivationPathRefItemProvider == null) {
			factTypeDerivationPathRefItemProvider = new FactTypeDerivationPathRefItemProvider(this);
		}

		return factTypeDerivationPathRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationPathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeDerivationPathTypeItemProvider factTypeDerivationPathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationPathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeDerivationPathTypeAdapter() {
		if (factTypeDerivationPathTypeItemProvider == null) {
			factTypeDerivationPathTypeItemProvider = new FactTypeDerivationPathTypeItemProvider(this);
		}

		return factTypeDerivationPathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationProjectionRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeDerivationProjectionRefItemProvider factTypeDerivationProjectionRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationProjectionRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeDerivationProjectionRefAdapter() {
		if (factTypeDerivationProjectionRefItemProvider == null) {
			factTypeDerivationProjectionRefItemProvider = new FactTypeDerivationProjectionRefItemProvider(this);
		}

		return factTypeDerivationProjectionRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationRequiresProjectionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeDerivationRequiresProjectionErrorTypeItemProvider factTypeDerivationRequiresProjectionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationRequiresProjectionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeDerivationRequiresProjectionErrorTypeAdapter() {
		if (factTypeDerivationRequiresProjectionErrorTypeItemProvider == null) {
			factTypeDerivationRequiresProjectionErrorTypeItemProvider = new FactTypeDerivationRequiresProjectionErrorTypeItemProvider(this);
		}

		return factTypeDerivationRequiresProjectionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationRuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeDerivationRuleTypeItemProvider factTypeDerivationRuleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeDerivationRuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeDerivationRuleTypeAdapter() {
		if (factTypeDerivationRuleTypeItemProvider == null) {
			factTypeDerivationRuleTypeItemProvider = new FactTypeDerivationRuleTypeItemProvider(this);
		}

		return factTypeDerivationRuleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeInstanceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeInstanceRefItemProvider factTypeInstanceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeInstanceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeInstanceRefAdapter() {
		if (factTypeInstanceRefItemProvider == null) {
			factTypeInstanceRefItemProvider = new FactTypeInstanceRefItemProvider(this);
		}

		return factTypeInstanceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeInstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeInstancesTypeItemProvider factTypeInstancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeInstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeInstancesTypeAdapter() {
		if (factTypeInstancesTypeItemProvider == null) {
			factTypeInstancesTypeItemProvider = new FactTypeInstancesTypeItemProvider(this);
		}

		return factTypeInstancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeInstanceTypeItemProvider factTypeInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeInstanceTypeAdapter() {
		if (factTypeInstanceTypeItemProvider == null) {
			factTypeInstanceTypeItemProvider = new FactTypeInstanceTypeItemProvider(this);
		}

		return factTypeInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeRefItemProvider factTypeRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeRefAdapter() {
		if (factTypeRefItemProvider == null) {
			factTypeRefItemProvider = new FactTypeRefItemProvider(this);
		}

		return factTypeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRequiresInternalUniquenessConstraintErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider factTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRequiresInternalUniquenessConstraintErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeRequiresInternalUniquenessConstraintErrorTypeAdapter() {
		if (factTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider == null) {
			factTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider = new FactTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider(this);
		}

		return factTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRequiresReadingErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeRequiresReadingErrorTypeItemProvider factTypeRequiresReadingErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRequiresReadingErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeRequiresReadingErrorTypeAdapter() {
		if (factTypeRequiresReadingErrorTypeItemProvider == null) {
			factTypeRequiresReadingErrorTypeItemProvider = new FactTypeRequiresReadingErrorTypeItemProvider(this);
		}

		return factTypeRequiresReadingErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRoleInstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeRoleInstancesTypeItemProvider factTypeRoleInstancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeRoleInstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeRoleInstancesTypeAdapter() {
		if (factTypeRoleInstancesTypeItemProvider == null) {
			factTypeRoleInstancesTypeItemProvider = new FactTypeRoleInstancesTypeItemProvider(this);
		}

		return factTypeRoleInstancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypesTypeItemProvider factTypesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypesTypeAdapter() {
		if (factTypesTypeItemProvider == null) {
			factTypesTypeItemProvider = new FactTypesTypeItemProvider(this);
		}

		return factTypesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FactTypeTypeItemProvider factTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FactTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFactTypeTypeAdapter() {
		if (factTypeTypeItemProvider == null) {
			factTypeTypeItemProvider = new FactTypeTypeItemProvider(this);
		}

		return factTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FixedLengthRawDataDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedLengthRawDataDataTypeTypeItemProvider fixedLengthRawDataDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FixedLengthRawDataDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedLengthRawDataDataTypeTypeAdapter() {
		if (fixedLengthRawDataDataTypeTypeItemProvider == null) {
			fixedLengthRawDataDataTypeTypeItemProvider = new FixedLengthRawDataDataTypeTypeItemProvider(this);
		}

		return fixedLengthRawDataDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FixedLengthTextDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedLengthTextDataTypeTypeItemProvider fixedLengthTextDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FixedLengthTextDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedLengthTextDataTypeTypeAdapter() {
		if (fixedLengthTextDataTypeTypeItemProvider == null) {
			fixedLengthTextDataTypeTypeItemProvider = new FixedLengthTextDataTypeTypeItemProvider(this);
		}

		return fixedLengthTextDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FloatingPointNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatingPointNumericDataTypeTypeItemProvider floatingPointNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FloatingPointNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatingPointNumericDataTypeTypeAdapter() {
		if (floatingPointNumericDataTypeTypeItemProvider == null) {
			floatingPointNumericDataTypeTypeItemProvider = new FloatingPointNumericDataTypeTypeItemProvider(this);
		}

		return floatingPointNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintContradictsInternalUniquenessConstraintErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider frequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintContradictsInternalUniquenessConstraintErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintContradictsInternalUniquenessConstraintErrorTypeAdapter() {
		if (frequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider == null) {
			frequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider = new FrequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider(this);
		}

		return frequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintExactlyOneErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintExactlyOneErrorTypeItemProvider frequencyConstraintExactlyOneErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintExactlyOneErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintExactlyOneErrorTypeAdapter() {
		if (frequencyConstraintExactlyOneErrorTypeItemProvider == null) {
			frequencyConstraintExactlyOneErrorTypeItemProvider = new FrequencyConstraintExactlyOneErrorTypeItemProvider(this);
		}

		return frequencyConstraintExactlyOneErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintMinMaxErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintMinMaxErrorTypeItemProvider frequencyConstraintMinMaxErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintMinMaxErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintMinMaxErrorTypeAdapter() {
		if (frequencyConstraintMinMaxErrorTypeItemProvider == null) {
			frequencyConstraintMinMaxErrorTypeItemProvider = new FrequencyConstraintMinMaxErrorTypeItemProvider(this);
		}

		return frequencyConstraintMinMaxErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintNonRestrictiveRangeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintNonRestrictiveRangeErrorTypeItemProvider frequencyConstraintNonRestrictiveRangeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintNonRestrictiveRangeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintNonRestrictiveRangeErrorTypeAdapter() {
		if (frequencyConstraintNonRestrictiveRangeErrorTypeItemProvider == null) {
			frequencyConstraintNonRestrictiveRangeErrorTypeItemProvider = new FrequencyConstraintNonRestrictiveRangeErrorTypeItemProvider(this);
		}

		return frequencyConstraintNonRestrictiveRangeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintRefItemProvider frequencyConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintRefAdapter() {
		if (frequencyConstraintRefItemProvider == null) {
			frequencyConstraintRefItemProvider = new FrequencyConstraintRefItemProvider(this);
		}

		return frequencyConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintTypeItemProvider frequencyConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintTypeAdapter() {
		if (frequencyConstraintTypeItemProvider == null) {
			frequencyConstraintTypeItemProvider = new FrequencyConstraintTypeItemProvider(this);
		}

		return frequencyConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintViolatedByUniquenessConstraintErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider frequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FrequencyConstraintViolatedByUniquenessConstraintErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrequencyConstraintViolatedByUniquenessConstraintErrorTypeAdapter() {
		if (frequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider == null) {
			frequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider = new FrequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider(this);
		}

		return frequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionDuplicateNameErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionDuplicateNameErrorTypeItemProvider functionDuplicateNameErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionDuplicateNameErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionDuplicateNameErrorTypeAdapter() {
		if (functionDuplicateNameErrorTypeItemProvider == null) {
			functionDuplicateNameErrorTypeItemProvider = new FunctionDuplicateNameErrorTypeItemProvider(this);
		}

		return functionDuplicateNameErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionParameterRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionParameterRefItemProvider functionParameterRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionParameterRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionParameterRefAdapter() {
		if (functionParameterRefItemProvider == null) {
			functionParameterRefItemProvider = new FunctionParameterRefItemProvider(this);
		}

		return functionParameterRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionParameterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionParameterTypeItemProvider functionParameterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionParameterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionParameterTypeAdapter() {
		if (functionParameterTypeItemProvider == null) {
			functionParameterTypeItemProvider = new FunctionParameterTypeItemProvider(this);
		}

		return functionParameterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionRefItemProvider functionRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionRefAdapter() {
		if (functionRefItemProvider == null) {
			functionRefItemProvider = new FunctionRefItemProvider(this);
		}

		return functionRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionsTypeItemProvider functionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionsTypeAdapter() {
		if (functionsTypeItemProvider == null) {
			functionsTypeItemProvider = new FunctionsTypeItemProvider(this);
		}

		return functionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionsType1ItemProvider functionsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionsType1Adapter() {
		if (functionsType1ItemProvider == null) {
			functionsType1ItemProvider = new FunctionsType1ItemProvider(this);
		}

		return functionsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FunctionTypeItemProvider functionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.FunctionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFunctionTypeAdapter() {
		if (functionTypeItemProvider == null) {
			functionTypeItemProvider = new FunctionTypeItemProvider(this);
		}

		return functionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GenerationSettingsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenerationSettingsTypeItemProvider generationSettingsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GenerationSettingsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenerationSettingsTypeAdapter() {
		if (generationSettingsTypeItemProvider == null) {
			generationSettingsTypeItemProvider = new GenerationSettingsTypeItemProvider(this);
		}

		return generationSettingsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GenerationSettingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenerationSettingTypeItemProvider generationSettingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GenerationSettingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenerationSettingTypeAdapter() {
		if (generationSettingTypeItemProvider == null) {
			generationSettingTypeItemProvider = new GenerationSettingTypeItemProvider(this);
		}

		return generationSettingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GenerationStateType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GenerationStateTypeItemProvider generationStateTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GenerationStateType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGenerationStateTypeAdapter() {
		if (generationStateTypeItemProvider == null) {
			generationStateTypeItemProvider = new GenerationStateTypeItemProvider(this);
		}

		return generationStateTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupDuplicateNameErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupDuplicateNameErrorTypeItemProvider groupDuplicateNameErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupDuplicateNameErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupDuplicateNameErrorTypeAdapter() {
		if (groupDuplicateNameErrorTypeItemProvider == null) {
			groupDuplicateNameErrorTypeItemProvider = new GroupDuplicateNameErrorTypeItemProvider(this);
		}

		return groupDuplicateNameErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupElementsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupElementsTypeItemProvider groupElementsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupElementsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupElementsTypeAdapter() {
		if (groupElementsTypeItemProvider == null) {
			groupElementsTypeItemProvider = new GroupElementsTypeItemProvider(this);
		}

		return groupElementsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupingTypeItemProvider groupingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupingTypeAdapter() {
		if (groupingTypeItemProvider == null) {
			groupingTypeItemProvider = new GroupingTypeItemProvider(this);
		}

		return groupingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupMembershipContradictionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupMembershipContradictionErrorTypeItemProvider groupMembershipContradictionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupMembershipContradictionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupMembershipContradictionErrorTypeAdapter() {
		if (groupMembershipContradictionErrorTypeItemProvider == null) {
			groupMembershipContradictionErrorTypeItemProvider = new GroupMembershipContradictionErrorTypeItemProvider(this);
		}

		return groupMembershipContradictionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupRefItemProvider groupRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupRefAdapter() {
		if (groupRefItemProvider == null) {
			groupRefItemProvider = new GroupRefItemProvider(this);
		}

		return groupRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupsTypeItemProvider groupsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupsTypeAdapter() {
		if (groupsTypeItemProvider == null) {
			groupsTypeItemProvider = new GroupsTypeItemProvider(this);
		}

		return groupsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupsType1ItemProvider groupsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupsType1Adapter() {
		if (groupsType1ItemProvider == null) {
			groupsType1ItemProvider = new GroupsType1ItemProvider(this);
		}

		return groupsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupTypeItemProvider groupTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupTypeAdapter() {
		if (groupTypeItemProvider == null) {
			groupTypeItemProvider = new GroupTypeItemProvider(this);
		}

		return groupTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupType1ItemProvider groupType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupType1Adapter() {
		if (groupType1ItemProvider == null) {
			groupType1ItemProvider = new GroupType1ItemProvider(this);
		}

		return groupType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupTypesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupTypesTypeItemProvider groupTypesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupTypesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupTypesTypeAdapter() {
		if (groupTypesTypeItemProvider == null) {
			groupTypesTypeItemProvider = new GroupTypesTypeItemProvider(this);
		}

		return groupTypesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected GroupTypeTypeItemProvider groupTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.GroupTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createGroupTypeTypeAdapter() {
		if (groupTypeTypeItemProvider == null) {
			groupTypeTypeItemProvider = new GroupTypeTypeItemProvider(this);
		}

		return groupTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ImplicationErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplicationErrorTypeItemProvider implicationErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ImplicationErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplicationErrorTypeAdapter() {
		if (implicationErrorTypeItemProvider == null) {
			implicationErrorTypeItemProvider = new ImplicationErrorTypeItemProvider(this);
		}

		return implicationErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ImpliedFactRolesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImpliedFactRolesTypeItemProvider impliedFactRolesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ImpliedFactRolesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImpliedFactRolesTypeAdapter() {
		if (impliedFactRolesTypeItemProvider == null) {
			impliedFactRolesTypeItemProvider = new ImpliedFactRolesTypeItemProvider(this);
		}

		return impliedFactRolesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ImpliedFactTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImpliedFactTypeTypeItemProvider impliedFactTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ImpliedFactTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImpliedFactTypeTypeAdapter() {
		if (impliedFactTypeTypeItemProvider == null) {
			impliedFactTypeTypeItemProvider = new ImpliedFactTypeTypeItemProvider(this);
		}

		return impliedFactTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ImpliedInternalUniquenessConstraintErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImpliedInternalUniquenessConstraintErrorTypeItemProvider impliedInternalUniquenessConstraintErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ImpliedInternalUniquenessConstraintErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImpliedInternalUniquenessConstraintErrorTypeAdapter() {
		if (impliedInternalUniquenessConstraintErrorTypeItemProvider == null) {
			impliedInternalUniquenessConstraintErrorTypeItemProvider = new ImpliedInternalUniquenessConstraintErrorTypeItemProvider(this);
		}

		return impliedInternalUniquenessConstraintErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.InformalDerivationRuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InformalDerivationRuleTypeItemProvider informalDerivationRuleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.InformalDerivationRuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInformalDerivationRuleTypeAdapter() {
		if (informalDerivationRuleTypeItemProvider == null) {
			informalDerivationRuleTypeItemProvider = new InformalDerivationRuleTypeItemProvider(this);
		}

		return informalDerivationRuleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.InputFromType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputFromTypeItemProvider inputFromTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.InputFromType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputFromTypeAdapter() {
		if (inputFromTypeItemProvider == null) {
			inputFromTypeItemProvider = new InputFromTypeItemProvider(this);
		}

		return inputFromTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.InputsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputsTypeItemProvider inputsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.InputsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputsTypeAdapter() {
		if (inputsTypeItemProvider == null) {
			inputsTypeItemProvider = new InputsTypeItemProvider(this);
		}

		return inputsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.InstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstancesTypeItemProvider instancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.InstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstancesTypeAdapter() {
		if (instancesTypeItemProvider == null) {
			instancesTypeItemProvider = new InstancesTypeItemProvider(this);
		}

		return instancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.InternalConstraintsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InternalConstraintsTypeItemProvider internalConstraintsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.InternalConstraintsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInternalConstraintsTypeAdapter() {
		if (internalConstraintsTypeItemProvider == null) {
			internalConstraintsTypeItemProvider = new InternalConstraintsTypeItemProvider(this);
		}

		return internalConstraintsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinedConstraintRoleProjectionCompatibilityErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider joinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinedConstraintRoleProjectionCompatibilityErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinedConstraintRoleProjectionCompatibilityErrorTypeAdapter() {
		if (joinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider == null) {
			joinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider = new JoinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider(this);
		}

		return joinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinedPathRoleRequiresCompatibleRolePlayerErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider joinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinedPathRoleRequiresCompatibleRolePlayerErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinedPathRoleRequiresCompatibleRolePlayerErrorTypeAdapter() {
		if (joinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider == null) {
			joinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider = new JoinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider(this);
		}

		return joinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathProjectionRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinPathProjectionRefItemProvider joinPathProjectionRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathProjectionRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinPathProjectionRefAdapter() {
		if (joinPathProjectionRefItemProvider == null) {
			joinPathProjectionRefItemProvider = new JoinPathProjectionRefItemProvider(this);
		}

		return joinPathProjectionRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathProjectionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinPathProjectionsTypeItemProvider joinPathProjectionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathProjectionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinPathProjectionsTypeAdapter() {
		if (joinPathProjectionsTypeItemProvider == null) {
			joinPathProjectionsTypeItemProvider = new JoinPathProjectionsTypeItemProvider(this);
		}

		return joinPathProjectionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathProjectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinPathProjectionTypeItemProvider joinPathProjectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathProjectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinPathProjectionTypeAdapter() {
		if (joinPathProjectionTypeItemProvider == null) {
			joinPathProjectionTypeItemProvider = new JoinPathProjectionTypeItemProvider(this);
		}

		return joinPathProjectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathRequiredErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinPathRequiredErrorTypeItemProvider joinPathRequiredErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathRequiredErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinPathRequiredErrorTypeAdapter() {
		if (joinPathRequiredErrorTypeItemProvider == null) {
			joinPathRequiredErrorTypeItemProvider = new JoinPathRequiredErrorTypeItemProvider(this);
		}

		return joinPathRequiredErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathRequiresProjectionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinPathRequiresProjectionErrorTypeItemProvider joinPathRequiresProjectionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinPathRequiresProjectionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinPathRequiresProjectionErrorTypeAdapter() {
		if (joinPathRequiresProjectionErrorTypeItemProvider == null) {
			joinPathRequiresProjectionErrorTypeItemProvider = new JoinPathRequiresProjectionErrorTypeItemProvider(this);
		}

		return joinPathRequiresProjectionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinRuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected JoinRuleTypeItemProvider joinRuleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.JoinRuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createJoinRuleTypeAdapter() {
		if (joinRuleTypeItemProvider == null) {
			joinRuleTypeItemProvider = new JoinRuleTypeItemProvider(this);
		}

		return joinRuleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.LargeLengthRawDataDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LargeLengthRawDataDataTypeTypeItemProvider largeLengthRawDataDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.LargeLengthRawDataDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLargeLengthRawDataDataTypeTypeAdapter() {
		if (largeLengthRawDataDataTypeTypeItemProvider == null) {
			largeLengthRawDataDataTypeTypeItemProvider = new LargeLengthRawDataDataTypeTypeItemProvider(this);
		}

		return largeLengthRawDataDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.LargeLengthTextDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LargeLengthTextDataTypeTypeItemProvider largeLengthTextDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.LargeLengthTextDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLargeLengthTextDataTypeTypeAdapter() {
		if (largeLengthTextDataTypeTypeItemProvider == null) {
			largeLengthTextDataTypeTypeItemProvider = new LargeLengthTextDataTypeTypeItemProvider(this);
		}

		return largeLengthTextDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.LeadRolePathRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeadRolePathRefItemProvider leadRolePathRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.LeadRolePathRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeadRolePathRefAdapter() {
		if (leadRolePathRefItemProvider == null) {
			leadRolePathRefItemProvider = new LeadRolePathRefItemProvider(this);
		}

		return leadRolePathRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.LeadRolePathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeadRolePathTypeItemProvider leadRolePathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.LeadRolePathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeadRolePathTypeAdapter() {
		if (leadRolePathTypeItemProvider == null) {
			leadRolePathTypeItemProvider = new LeadRolePathTypeItemProvider(this);
		}

		return leadRolePathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.MandatoryConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MandatoryConstraintRefItemProvider mandatoryConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.MandatoryConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMandatoryConstraintRefAdapter() {
		if (mandatoryConstraintRefItemProvider == null) {
			mandatoryConstraintRefItemProvider = new MandatoryConstraintRefItemProvider(this);
		}

		return mandatoryConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.MandatoryConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MandatoryConstraintTypeItemProvider mandatoryConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.MandatoryConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMandatoryConstraintTypeAdapter() {
		if (mandatoryConstraintTypeItemProvider == null) {
			mandatoryConstraintTypeItemProvider = new MandatoryConstraintTypeItemProvider(this);
		}

		return mandatoryConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.MaxValueMismatchErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MaxValueMismatchErrorTypeItemProvider maxValueMismatchErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.MaxValueMismatchErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMaxValueMismatchErrorTypeAdapter() {
		if (maxValueMismatchErrorTypeItemProvider == null) {
			maxValueMismatchErrorTypeItemProvider = new MaxValueMismatchErrorTypeItemProvider(this);
		}

		return maxValueMismatchErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.MinValueMismatchErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MinValueMismatchErrorTypeItemProvider minValueMismatchErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.MinValueMismatchErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMinValueMismatchErrorTypeAdapter() {
		if (minValueMismatchErrorTypeItemProvider == null) {
			minValueMismatchErrorTypeItemProvider = new MinValueMismatchErrorTypeItemProvider(this);
		}

		return minValueMismatchErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelErrorDisplayFilterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelErrorDisplayFilterTypeItemProvider modelErrorDisplayFilterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelErrorDisplayFilterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelErrorDisplayFilterTypeAdapter() {
		if (modelErrorDisplayFilterTypeItemProvider == null) {
			modelErrorDisplayFilterTypeItemProvider = new ModelErrorDisplayFilterTypeItemProvider(this);
		}

		return modelErrorDisplayFilterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelErrorsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelErrorsTypeItemProvider modelErrorsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelErrorsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelErrorsTypeAdapter() {
		if (modelErrorsTypeItemProvider == null) {
			modelErrorsTypeItemProvider = new ModelErrorsTypeItemProvider(this);
		}

		return modelErrorsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelNoteReferencedByType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelNoteReferencedByTypeItemProvider modelNoteReferencedByTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelNoteReferencedByType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelNoteReferencedByTypeAdapter() {
		if (modelNoteReferencedByTypeItemProvider == null) {
			modelNoteReferencedByTypeItemProvider = new ModelNoteReferencedByTypeItemProvider(this);
		}

		return modelNoteReferencedByTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelNotesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelNotesTypeItemProvider modelNotesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelNotesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelNotesTypeAdapter() {
		if (modelNotesTypeItemProvider == null) {
			modelNotesTypeItemProvider = new ModelNotesTypeItemProvider(this);
		}

		return modelNotesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelNoteType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ModelNoteTypeItemProvider modelNoteTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ModelNoteType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createModelNoteTypeAdapter() {
		if (modelNoteTypeItemProvider == null) {
			modelNoteTypeItemProvider = new ModelNoteTypeItemProvider(this);
		}

		return modelNoteTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.MoneyNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MoneyNumericDataTypeTypeItemProvider moneyNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.MoneyNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMoneyNumericDataTypeTypeAdapter() {
		if (moneyNumericDataTypeTypeItemProvider == null) {
			moneyNumericDataTypeTypeItemProvider = new MoneyNumericDataTypeTypeItemProvider(this);
		}

		return moneyNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.NameGeneratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameGeneratorTypeItemProvider nameGeneratorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.NameGeneratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNameGeneratorTypeAdapter() {
		if (nameGeneratorTypeItemProvider == null) {
			nameGeneratorTypeItemProvider = new NameGeneratorTypeItemProvider(this);
		}

		return nameGeneratorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.NestedGroupsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NestedGroupsTypeItemProvider nestedGroupsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.NestedGroupsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNestedGroupsTypeAdapter() {
		if (nestedGroupsTypeItemProvider == null) {
			nestedGroupsTypeItemProvider = new NestedGroupsTypeItemProvider(this);
		}

		return nestedGroupsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.NMinusOneErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NMinusOneErrorTypeItemProvider nMinusOneErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.NMinusOneErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNMinusOneErrorTypeAdapter() {
		if (nMinusOneErrorTypeItemProvider == null) {
			nMinusOneErrorTypeItemProvider = new NMinusOneErrorTypeItemProvider(this);
		}

		return nMinusOneErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.NotesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotesTypeItemProvider notesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.NotesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotesTypeAdapter() {
		if (notesTypeItemProvider == null) {
			notesTypeItemProvider = new NotesTypeItemProvider(this);
		}

		return notesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.NoteType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NoteTypeItemProvider noteTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.NoteType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNoteTypeAdapter() {
		if (noteTypeItemProvider == null) {
			noteTypeItemProvider = new NoteTypeItemProvider(this);
		}

		return noteTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.NotWellModeledSubsetAndMandatoryErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NotWellModeledSubsetAndMandatoryErrorTypeItemProvider notWellModeledSubsetAndMandatoryErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.NotWellModeledSubsetAndMandatoryErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNotWellModeledSubsetAndMandatoryErrorTypeAdapter() {
		if (notWellModeledSubsetAndMandatoryErrorTypeItemProvider == null) {
			notWellModeledSubsetAndMandatoryErrorTypeItemProvider = new NotWellModeledSubsetAndMandatoryErrorTypeItemProvider(this);
		}

		return notWellModeledSubsetAndMandatoryErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectIdOtherDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectIdOtherDataTypeTypeItemProvider objectIdOtherDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectIdOtherDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectIdOtherDataTypeTypeAdapter() {
		if (objectIdOtherDataTypeTypeItemProvider == null) {
			objectIdOtherDataTypeTypeItemProvider = new ObjectIdOtherDataTypeTypeItemProvider(this);
		}

		return objectIdOtherDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectificationRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectificationRefItemProvider objectificationRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectificationRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectificationRefAdapter() {
		if (objectificationRefItemProvider == null) {
			objectificationRefItemProvider = new ObjectificationRefItemProvider(this);
		}

		return objectificationRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedFactTypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifiedFactTypeRefItemProvider objectifiedFactTypeRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedFactTypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifiedFactTypeRefAdapter() {
		if (objectifiedFactTypeRefItemProvider == null) {
			objectifiedFactTypeRefItemProvider = new ObjectifiedFactTypeRefItemProvider(this);
		}

		return objectifiedFactTypeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedInstanceRequiredErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifiedInstanceRequiredErrorTypeItemProvider objectifiedInstanceRequiredErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedInstanceRequiredErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifiedInstanceRequiredErrorTypeAdapter() {
		if (objectifiedInstanceRequiredErrorTypeItemProvider == null) {
			objectifiedInstanceRequiredErrorTypeItemProvider = new ObjectifiedInstanceRequiredErrorTypeItemProvider(this);
		}

		return objectifiedInstanceRequiredErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifiedTypeTypeItemProvider objectifiedTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifiedTypeTypeAdapter() {
		if (objectifiedTypeTypeItemProvider == null) {
			objectifiedTypeTypeItemProvider = new ObjectifiedTypeTypeItemProvider(this);
		}

		return objectifiedTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedUnaryRoleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifiedUnaryRoleTypeItemProvider objectifiedUnaryRoleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifiedUnaryRoleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifiedUnaryRoleTypeAdapter() {
		if (objectifiedUnaryRoleTypeItemProvider == null) {
			objectifiedUnaryRoleTypeItemProvider = new ObjectifiedUnaryRoleTypeItemProvider(this);
		}

		return objectifiedUnaryRoleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifyingInstanceRequiredErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectifyingInstanceRequiredErrorTypeItemProvider objectifyingInstanceRequiredErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectifyingInstanceRequiredErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectifyingInstanceRequiredErrorTypeAdapter() {
		if (objectifyingInstanceRequiredErrorTypeItemProvider == null) {
			objectifyingInstanceRequiredErrorTypeItemProvider = new ObjectifyingInstanceRequiredErrorTypeItemProvider(this);
		}

		return objectifyingInstanceRequiredErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectsTypeItemProvider objectsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectsTypeAdapter() {
		if (objectsTypeItemProvider == null) {
			objectsTypeItemProvider = new ObjectsTypeItemProvider(this);
		}

		return objectsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeCardinalityRestrictionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeCardinalityRestrictionTypeItemProvider objectTypeCardinalityRestrictionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeCardinalityRestrictionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeCardinalityRestrictionTypeAdapter() {
		if (objectTypeCardinalityRestrictionTypeItemProvider == null) {
			objectTypeCardinalityRestrictionTypeItemProvider = new ObjectTypeCardinalityRestrictionTypeItemProvider(this);
		}

		return objectTypeCardinalityRestrictionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeDuplicateNameErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeDuplicateNameErrorTypeItemProvider objectTypeDuplicateNameErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeDuplicateNameErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeDuplicateNameErrorTypeAdapter() {
		if (objectTypeDuplicateNameErrorTypeItemProvider == null) {
			objectTypeDuplicateNameErrorTypeItemProvider = new ObjectTypeDuplicateNameErrorTypeItemProvider(this);
		}

		return objectTypeDuplicateNameErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeInstanceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeInstanceRefItemProvider objectTypeInstanceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeInstanceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeInstanceRefAdapter() {
		if (objectTypeInstanceRefItemProvider == null) {
			objectTypeInstanceRefItemProvider = new ObjectTypeInstanceRefItemProvider(this);
		}

		return objectTypeInstanceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeRefItemProvider objectTypeRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeRefAdapter() {
		if (objectTypeRefItemProvider == null) {
			objectTypeRefItemProvider = new ObjectTypeRefItemProvider(this);
		}

		return objectTypeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeRequiresPrimarySupertypeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeRequiresPrimarySupertypeErrorTypeItemProvider objectTypeRequiresPrimarySupertypeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeRequiresPrimarySupertypeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeRequiresPrimarySupertypeErrorTypeAdapter() {
		if (objectTypeRequiresPrimarySupertypeErrorTypeItemProvider == null) {
			objectTypeRequiresPrimarySupertypeErrorTypeItemProvider = new ObjectTypeRequiresPrimarySupertypeErrorTypeItemProvider(this);
		}

		return objectTypeRequiresPrimarySupertypeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeRoleInstanceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypeRoleInstanceRefItemProvider objectTypeRoleInstanceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypeRoleInstanceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypeRoleInstanceRefAdapter() {
		if (objectTypeRoleInstanceRefItemProvider == null) {
			objectTypeRoleInstanceRefItemProvider = new ObjectTypeRoleInstanceRefItemProvider(this);
		}

		return objectTypeRoleInstanceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectTypesTypeItemProvider objectTypesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectTypesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectTypesTypeAdapter() {
		if (objectTypesTypeItemProvider == null) {
			objectTypesTypeItemProvider = new ObjectTypesTypeItemProvider(this);
		}

		return objectTypesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifierRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectUnifierRefItemProvider objectUnifierRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifierRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectUnifierRefAdapter() {
		if (objectUnifierRefItemProvider == null) {
			objectUnifierRefItemProvider = new ObjectUnifierRefItemProvider(this);
		}

		return objectUnifierRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifierRequiresCompatibleObjectTypesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider objectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifierRequiresCompatibleObjectTypesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectUnifierRequiresCompatibleObjectTypesErrorTypeAdapter() {
		if (objectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider == null) {
			objectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider = new ObjectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider(this);
		}

		return objectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifiersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectUnifiersTypeItemProvider objectUnifiersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifiersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectUnifiersTypeAdapter() {
		if (objectUnifiersTypeItemProvider == null) {
			objectUnifiersTypeItemProvider = new ObjectUnifiersTypeItemProvider(this);
		}

		return objectUnifiersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ObjectUnifierTypeItemProvider objectUnifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ObjectUnifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createObjectUnifierTypeAdapter() {
		if (objectUnifierTypeItemProvider == null) {
			objectUnifierTypeItemProvider = new ObjectUnifierTypeItemProvider(this);
		}

		return objectUnifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.OleObjectRawDataDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OleObjectRawDataDataTypeTypeItemProvider oleObjectRawDataDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.OleObjectRawDataDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOleObjectRawDataDataTypeTypeAdapter() {
		if (oleObjectRawDataDataTypeTypeItemProvider == null) {
			oleObjectRawDataDataTypeTypeItemProvider = new OleObjectRawDataDataTypeTypeItemProvider(this);
		}

		return oleObjectRawDataDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ORMModelRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ORMModelRefItemProvider ormModelRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ORMModelRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createORMModelRefAdapter() {
		if (ormModelRefItemProvider == null) {
			ormModelRefItemProvider = new ORMModelRefItemProvider(this);
		}

		return ormModelRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ORMModelType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ORMModelTypeItemProvider ormModelTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ORMModelType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createORMModelTypeAdapter() {
		if (ormModelTypeItemProvider == null) {
			ormModelTypeItemProvider = new ORMModelTypeItemProvider(this);
		}

		return ormModelTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParametersTypeItemProvider parametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParametersTypeAdapter() {
		if (parametersTypeItemProvider == null) {
			parametersTypeItemProvider = new ParametersTypeItemProvider(this);
		}

		return parametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PartialFactTypeDerivationProjectionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialFactTypeDerivationProjectionErrorTypeItemProvider partialFactTypeDerivationProjectionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PartialFactTypeDerivationProjectionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialFactTypeDerivationProjectionErrorTypeAdapter() {
		if (partialFactTypeDerivationProjectionErrorTypeItemProvider == null) {
			partialFactTypeDerivationProjectionErrorTypeItemProvider = new PartialFactTypeDerivationProjectionErrorTypeItemProvider(this);
		}

		return partialFactTypeDerivationProjectionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PartialJoinPathProjectionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialJoinPathProjectionErrorTypeItemProvider partialJoinPathProjectionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PartialJoinPathProjectionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialJoinPathProjectionErrorTypeAdapter() {
		if (partialJoinPathProjectionErrorTypeItemProvider == null) {
			partialJoinPathProjectionErrorTypeItemProvider = new PartialJoinPathProjectionErrorTypeItemProvider(this);
		}

		return partialJoinPathProjectionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PartialQueryDerivationProjectionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PartialQueryDerivationProjectionErrorTypeItemProvider partialQueryDerivationProjectionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PartialQueryDerivationProjectionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPartialQueryDerivationProjectionErrorTypeAdapter() {
		if (partialQueryDerivationProjectionErrorTypeItemProvider == null) {
			partialQueryDerivationProjectionErrorTypeItemProvider = new PartialQueryDerivationProjectionErrorTypeItemProvider(this);
		}

		return partialQueryDerivationProjectionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathComponentsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathComponentsTypeItemProvider pathComponentsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathComponentsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathComponentsTypeAdapter() {
		if (pathComponentsTypeItemProvider == null) {
			pathComponentsTypeItemProvider = new PathComponentsTypeItemProvider(this);
		}

		return pathComponentsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathComponentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathComponentTypeItemProvider pathComponentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathComponentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathComponentTypeAdapter() {
		if (pathComponentTypeItemProvider == null) {
			pathComponentTypeItemProvider = new PathComponentTypeItemProvider(this);
		}

		return pathComponentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathConditionRoleValueRestrictionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathConditionRoleValueRestrictionTypeItemProvider pathConditionRoleValueRestrictionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathConditionRoleValueRestrictionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathConditionRoleValueRestrictionTypeAdapter() {
		if (pathConditionRoleValueRestrictionTypeItemProvider == null) {
			pathConditionRoleValueRestrictionTypeItemProvider = new PathConditionRoleValueRestrictionTypeItemProvider(this);
		}

		return pathConditionRoleValueRestrictionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathConditionRootValueRestrictionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathConditionRootValueRestrictionTypeItemProvider pathConditionRootValueRestrictionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathConditionRootValueRestrictionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathConditionRootValueRestrictionTypeAdapter() {
		if (pathConditionRootValueRestrictionTypeItemProvider == null) {
			pathConditionRootValueRestrictionTypeItemProvider = new PathConditionRootValueRestrictionTypeItemProvider(this);
		}

		return pathConditionRootValueRestrictionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathConstantType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathConstantTypeItemProvider pathConstantTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathConstantType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathConstantTypeAdapter() {
		if (pathConstantTypeItemProvider == null) {
			pathConstantTypeItemProvider = new PathConstantTypeItemProvider(this);
		}

		return pathConstantTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathedRoleRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathedRoleRefItemProvider pathedRoleRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathedRoleRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathedRoleRefAdapter() {
		if (pathedRoleRefItemProvider == null) {
			pathedRoleRefItemProvider = new PathedRoleRefItemProvider(this);
		}

		return pathedRoleRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathedRolesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathedRolesTypeItemProvider pathedRolesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathedRolesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathedRolesTypeAdapter() {
		if (pathedRolesTypeItemProvider == null) {
			pathedRolesTypeItemProvider = new PathedRolesTypeItemProvider(this);
		}

		return pathedRolesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathedRoleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathedRoleTypeItemProvider pathedRoleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathedRoleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathedRoleTypeAdapter() {
		if (pathedRoleTypeItemProvider == null) {
			pathedRoleTypeItemProvider = new PathedRoleTypeItemProvider(this);
		}

		return pathedRoleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathOuterJoinRequiresOptionalRoleErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathOuterJoinRequiresOptionalRoleErrorTypeItemProvider pathOuterJoinRequiresOptionalRoleErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathOuterJoinRequiresOptionalRoleErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathOuterJoinRequiresOptionalRoleErrorTypeAdapter() {
		if (pathOuterJoinRequiresOptionalRoleErrorTypeItemProvider == null) {
			pathOuterJoinRequiresOptionalRoleErrorTypeItemProvider = new PathOuterJoinRequiresOptionalRoleErrorTypeItemProvider(this);
		}

		return pathOuterJoinRequiresOptionalRoleErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathRequiresRootObjectTypeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathRequiresRootObjectTypeErrorTypeItemProvider pathRequiresRootObjectTypeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathRequiresRootObjectTypeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathRequiresRootObjectTypeErrorTypeAdapter() {
		if (pathRequiresRootObjectTypeErrorTypeItemProvider == null) {
			pathRequiresRootObjectTypeErrorTypeItemProvider = new PathRequiresRootObjectTypeErrorTypeItemProvider(this);
		}

		return pathRequiresRootObjectTypeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathSameFactTypeRoleFollowsJoinErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathSameFactTypeRoleFollowsJoinErrorTypeItemProvider pathSameFactTypeRoleFollowsJoinErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathSameFactTypeRoleFollowsJoinErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathSameFactTypeRoleFollowsJoinErrorTypeAdapter() {
		if (pathSameFactTypeRoleFollowsJoinErrorTypeItemProvider == null) {
			pathSameFactTypeRoleFollowsJoinErrorTypeItemProvider = new PathSameFactTypeRoleFollowsJoinErrorTypeItemProvider(this);
		}

		return pathSameFactTypeRoleFollowsJoinErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PathStartRoleFollowsRootObjectTypeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathStartRoleFollowsRootObjectTypeErrorTypeItemProvider pathStartRoleFollowsRootObjectTypeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PathStartRoleFollowsRootObjectTypeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathStartRoleFollowsRootObjectTypeErrorTypeAdapter() {
		if (pathStartRoleFollowsRootObjectTypeErrorTypeItemProvider == null) {
			pathStartRoleFollowsRootObjectTypeErrorTypeItemProvider = new PathStartRoleFollowsRootObjectTypeErrorTypeItemProvider(this);
		}

		return pathStartRoleFollowsRootObjectTypeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PictureRawDataDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PictureRawDataDataTypeTypeItemProvider pictureRawDataDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PictureRawDataDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPictureRawDataDataTypeTypeAdapter() {
		if (pictureRawDataDataTypeTypeItemProvider == null) {
			pictureRawDataDataTypeTypeItemProvider = new PictureRawDataDataTypeTypeItemProvider(this);
		}

		return pictureRawDataDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PlayedRolesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PlayedRolesTypeItemProvider playedRolesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PlayedRolesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPlayedRolesTypeAdapter() {
		if (playedRolesTypeItemProvider == null) {
			playedRolesTypeItemProvider = new PlayedRolesTypeItemProvider(this);
		}

		return playedRolesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PopulationMandatoryErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PopulationMandatoryErrorTypeItemProvider populationMandatoryErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PopulationMandatoryErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPopulationMandatoryErrorTypeAdapter() {
		if (populationMandatoryErrorTypeItemProvider == null) {
			populationMandatoryErrorTypeItemProvider = new PopulationMandatoryErrorTypeItemProvider(this);
		}

		return populationMandatoryErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PopulationUniquenessErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PopulationUniquenessErrorTypeItemProvider populationUniquenessErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PopulationUniquenessErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPopulationUniquenessErrorTypeAdapter() {
		if (populationUniquenessErrorTypeItemProvider == null) {
			populationUniquenessErrorTypeItemProvider = new PopulationUniquenessErrorTypeItemProvider(this);
		}

		return populationUniquenessErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.PreferredIdentifierRequiresMandatoryErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PreferredIdentifierRequiresMandatoryErrorTypeItemProvider preferredIdentifierRequiresMandatoryErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.PreferredIdentifierRequiresMandatoryErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPreferredIdentifierRequiresMandatoryErrorTypeAdapter() {
		if (preferredIdentifierRequiresMandatoryErrorTypeItemProvider == null) {
			preferredIdentifierRequiresMandatoryErrorTypeItemProvider = new PreferredIdentifierRequiresMandatoryErrorTypeItemProvider(this);
		}

		return preferredIdentifierRequiresMandatoryErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ProjectedFromType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectedFromTypeItemProvider projectedFromTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ProjectedFromType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectedFromTypeAdapter() {
		if (projectedFromTypeItemProvider == null) {
			projectedFromTypeItemProvider = new ProjectedFromTypeItemProvider(this);
		}

		return projectedFromTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ProjectedFromType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ProjectedFromType1ItemProvider projectedFromType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ProjectedFromType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createProjectedFromType1Adapter() {
		if (projectedFromType1ItemProvider == null) {
			projectedFromType1ItemProvider = new ProjectedFromType1ItemProvider(this);
		}

		return projectedFromType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationPathRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryDerivationPathRefItemProvider queryDerivationPathRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationPathRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryDerivationPathRefAdapter() {
		if (queryDerivationPathRefItemProvider == null) {
			queryDerivationPathRefItemProvider = new QueryDerivationPathRefItemProvider(this);
		}

		return queryDerivationPathRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationPathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryDerivationPathTypeItemProvider queryDerivationPathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationPathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryDerivationPathTypeAdapter() {
		if (queryDerivationPathTypeItemProvider == null) {
			queryDerivationPathTypeItemProvider = new QueryDerivationPathTypeItemProvider(this);
		}

		return queryDerivationPathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationRequiresProjectionErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryDerivationRequiresProjectionErrorTypeItemProvider queryDerivationRequiresProjectionErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationRequiresProjectionErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryDerivationRequiresProjectionErrorTypeAdapter() {
		if (queryDerivationRequiresProjectionErrorTypeItemProvider == null) {
			queryDerivationRequiresProjectionErrorTypeItemProvider = new QueryDerivationRequiresProjectionErrorTypeItemProvider(this);
		}

		return queryDerivationRequiresProjectionErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationRuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryDerivationRuleTypeItemProvider queryDerivationRuleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryDerivationRuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryDerivationRuleTypeAdapter() {
		if (queryDerivationRuleTypeItemProvider == null) {
			queryDerivationRuleTypeItemProvider = new QueryDerivationRuleTypeItemProvider(this);
		}

		return queryDerivationRuleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParameterBindingsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParameterBindingsTypeItemProvider queryParameterBindingsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParameterBindingsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParameterBindingsTypeAdapter() {
		if (queryParameterBindingsTypeItemProvider == null) {
			queryParameterBindingsTypeItemProvider = new QueryParameterBindingsTypeItemProvider(this);
		}

		return queryParameterBindingsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParameterBindingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParameterBindingTypeItemProvider queryParameterBindingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParameterBindingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParameterBindingTypeAdapter() {
		if (queryParameterBindingTypeItemProvider == null) {
			queryParameterBindingTypeItemProvider = new QueryParameterBindingTypeItemProvider(this);
		}

		return queryParameterBindingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParametersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParametersTypeItemProvider queryParametersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParametersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParametersTypeAdapter() {
		if (queryParametersTypeItemProvider == null) {
			queryParametersTypeItemProvider = new QueryParametersTypeItemProvider(this);
		}

		return queryParametersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParameterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryParameterTypeItemProvider queryParameterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryParameterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryParameterTypeAdapter() {
		if (queryParameterTypeItemProvider == null) {
			queryParameterTypeItemProvider = new QueryParameterTypeItemProvider(this);
		}

		return queryParameterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryRoleProjectionCompatibilityErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryRoleProjectionCompatibilityErrorTypeItemProvider queryRoleProjectionCompatibilityErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryRoleProjectionCompatibilityErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryRoleProjectionCompatibilityErrorTypeAdapter() {
		if (queryRoleProjectionCompatibilityErrorTypeItemProvider == null) {
			queryRoleProjectionCompatibilityErrorTypeItemProvider = new QueryRoleProjectionCompatibilityErrorTypeItemProvider(this);
		}

		return queryRoleProjectionCompatibilityErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueryTypeItemProvider queryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.QueryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueryTypeAdapter() {
		if (queryTypeItemProvider == null) {
			queryTypeItemProvider = new QueryTypeItemProvider(this);
		}

		return queryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingOrdersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingOrdersTypeItemProvider readingOrdersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingOrdersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingOrdersTypeAdapter() {
		if (readingOrdersTypeItemProvider == null) {
			readingOrdersTypeItemProvider = new ReadingOrdersTypeItemProvider(this);
		}

		return readingOrdersTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingOrderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingOrderTypeItemProvider readingOrderTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingOrderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingOrderTypeAdapter() {
		if (readingOrderTypeItemProvider == null) {
			readingOrderTypeItemProvider = new ReadingOrderTypeItemProvider(this);
		}

		return readingOrderTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingRefItemProvider readingRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingRefAdapter() {
		if (readingRefItemProvider == null) {
			readingRefItemProvider = new ReadingRefItemProvider(this);
		}

		return readingRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingRequiresUserModificationErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingRequiresUserModificationErrorTypeItemProvider readingRequiresUserModificationErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingRequiresUserModificationErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingRequiresUserModificationErrorTypeAdapter() {
		if (readingRequiresUserModificationErrorTypeItemProvider == null) {
			readingRequiresUserModificationErrorTypeItemProvider = new ReadingRequiresUserModificationErrorTypeItemProvider(this);
		}

		return readingRequiresUserModificationErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingRoleSequenceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingRoleSequenceTypeItemProvider readingRoleSequenceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingRoleSequenceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingRoleSequenceTypeAdapter() {
		if (readingRoleSequenceTypeItemProvider == null) {
			readingRoleSequenceTypeItemProvider = new ReadingRoleSequenceTypeItemProvider(this);
		}

		return readingRoleSequenceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingsTypeItemProvider readingsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingsTypeAdapter() {
		if (readingsTypeItemProvider == null) {
			readingsTypeItemProvider = new ReadingsTypeItemProvider(this);
		}

		return readingsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingsType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingsType1ItemProvider readingsType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingsType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingsType1Adapter() {
		if (readingsType1ItemProvider == null) {
			readingsType1ItemProvider = new ReadingsType1ItemProvider(this);
		}

		return readingsType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReadingTypeItemProvider readingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReadingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReadingTypeAdapter() {
		if (readingTypeItemProvider == null) {
			readingTypeItemProvider = new ReadingTypeItemProvider(this);
		}

		return readingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhraseDuplicateNameErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecognizedPhraseDuplicateNameErrorTypeItemProvider recognizedPhraseDuplicateNameErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhraseDuplicateNameErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecognizedPhraseDuplicateNameErrorTypeAdapter() {
		if (recognizedPhraseDuplicateNameErrorTypeItemProvider == null) {
			recognizedPhraseDuplicateNameErrorTypeItemProvider = new RecognizedPhraseDuplicateNameErrorTypeItemProvider(this);
		}

		return recognizedPhraseDuplicateNameErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhraseRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecognizedPhraseRefItemProvider recognizedPhraseRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhraseRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecognizedPhraseRefAdapter() {
		if (recognizedPhraseRefItemProvider == null) {
			recognizedPhraseRefItemProvider = new RecognizedPhraseRefItemProvider(this);
		}

		return recognizedPhraseRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhrasesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecognizedPhrasesTypeItemProvider recognizedPhrasesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhrasesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecognizedPhrasesTypeAdapter() {
		if (recognizedPhrasesTypeItemProvider == null) {
			recognizedPhrasesTypeItemProvider = new RecognizedPhrasesTypeItemProvider(this);
		}

		return recognizedPhrasesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhrasesType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecognizedPhrasesType1ItemProvider recognizedPhrasesType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhrasesType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecognizedPhrasesType1Adapter() {
		if (recognizedPhrasesType1ItemProvider == null) {
			recognizedPhrasesType1ItemProvider = new RecognizedPhrasesType1ItemProvider(this);
		}

		return recognizedPhrasesType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhraseType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RecognizedPhraseTypeItemProvider recognizedPhraseTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RecognizedPhraseType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRecognizedPhraseTypeAdapter() {
		if (recognizedPhraseTypeItemProvider == null) {
			recognizedPhraseTypeItemProvider = new RecognizedPhraseTypeItemProvider(this);
		}

		return recognizedPhraseTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReferenceModeKindRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceModeKindRefItemProvider referenceModeKindRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReferenceModeKindRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceModeKindRefAdapter() {
		if (referenceModeKindRefItemProvider == null) {
			referenceModeKindRefItemProvider = new ReferenceModeKindRefItemProvider(this);
		}

		return referenceModeKindRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReferenceModeKindsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceModeKindsTypeItemProvider referenceModeKindsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReferenceModeKindsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceModeKindsTypeAdapter() {
		if (referenceModeKindsTypeItemProvider == null) {
			referenceModeKindsTypeItemProvider = new ReferenceModeKindsTypeItemProvider(this);
		}

		return referenceModeKindsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ReferenceModeKindType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceModeKindTypeItemProvider referenceModeKindTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ReferenceModeKindType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceModeKindTypeAdapter() {
		if (referenceModeKindTypeItemProvider == null) {
			referenceModeKindTypeItemProvider = new ReferenceModeKindTypeItemProvider(this);
		}

		return referenceModeKindTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RefinementsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RefinementsTypeItemProvider refinementsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RefinementsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRefinementsTypeAdapter() {
		if (refinementsTypeItemProvider == null) {
			refinementsTypeItemProvider = new RefinementsTypeItemProvider(this);
		}

		return refinementsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RingConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RingConstraintRefItemProvider ringConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RingConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRingConstraintRefAdapter() {
		if (ringConstraintRefItemProvider == null) {
			ringConstraintRefItemProvider = new RingConstraintRefItemProvider(this);
		}

		return ringConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RingConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RingConstraintTypeItemProvider ringConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RingConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRingConstraintTypeAdapter() {
		if (ringConstraintTypeItemProvider == null) {
			ringConstraintTypeItemProvider = new RingConstraintTypeItemProvider(this);
		}

		return ringConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RingConstraintTypeNotSpecifiedErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RingConstraintTypeNotSpecifiedErrorTypeItemProvider ringConstraintTypeNotSpecifiedErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RingConstraintTypeNotSpecifiedErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRingConstraintTypeNotSpecifiedErrorTypeAdapter() {
		if (ringConstraintTypeNotSpecifiedErrorTypeItemProvider == null) {
			ringConstraintTypeNotSpecifiedErrorTypeItemProvider = new RingConstraintTypeNotSpecifiedErrorTypeItemProvider(this);
		}

		return ringConstraintTypeNotSpecifiedErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleBasedDerivationProjectionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleBasedDerivationProjectionTypeItemProvider roleBasedDerivationProjectionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleBasedDerivationProjectionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleBasedDerivationProjectionTypeAdapter() {
		if (roleBasedDerivationProjectionTypeItemProvider == null) {
			roleBasedDerivationProjectionTypeItemProvider = new RoleBasedDerivationProjectionTypeItemProvider(this);
		}

		return roleBasedDerivationProjectionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleInstancesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleInstancesTypeItemProvider roleInstancesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleInstancesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleInstancesTypeAdapter() {
		if (roleInstancesTypeItemProvider == null) {
			roleInstancesTypeItemProvider = new RoleInstancesTypeItemProvider(this);
		}

		return roleInstancesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleInstancesType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleInstancesType1ItemProvider roleInstancesType1ItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleInstancesType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleInstancesType1Adapter() {
		if (roleInstancesType1ItemProvider == null) {
			roleInstancesType1ItemProvider = new RoleInstancesType1ItemProvider(this);
		}

		return roleInstancesType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleInstanceTypeItemProvider roleInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleInstanceTypeAdapter() {
		if (roleInstanceTypeItemProvider == null) {
			roleInstanceTypeItemProvider = new RoleInstanceTypeItemProvider(this);
		}

		return roleInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RolePlayerRequiredErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RolePlayerRequiredErrorTypeItemProvider rolePlayerRequiredErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RolePlayerRequiredErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRolePlayerRequiredErrorTypeAdapter() {
		if (rolePlayerRequiredErrorTypeItemProvider == null) {
			rolePlayerRequiredErrorTypeItemProvider = new RolePlayerRequiredErrorTypeItemProvider(this);
		}

		return rolePlayerRequiredErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleProxyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleProxyTypeItemProvider roleProxyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleProxyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleProxyTypeAdapter() {
		if (roleProxyTypeItemProvider == null) {
			roleProxyTypeItemProvider = new RoleProxyTypeItemProvider(this);
		}

		return roleProxyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleRefItemProvider roleRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleRefAdapter() {
		if (roleRefItemProvider == null) {
			roleRefItemProvider = new RoleRefItemProvider(this);
		}

		return roleRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSequenceRoleRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleSequenceRoleRefItemProvider roleSequenceRoleRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSequenceRoleRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleSequenceRoleRefAdapter() {
		if (roleSequenceRoleRefItemProvider == null) {
			roleSequenceRoleRefItemProvider = new RoleSequenceRoleRefItemProvider(this);
		}

		return roleSequenceRoleRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSequenceWithProjectionRoleRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleSequenceWithProjectionRoleRefItemProvider roleSequenceWithProjectionRoleRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSequenceWithProjectionRoleRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleSequenceWithProjectionRoleRefAdapter() {
		if (roleSequenceWithProjectionRoleRefItemProvider == null) {
			roleSequenceWithProjectionRoleRefItemProvider = new RoleSequenceWithProjectionRoleRefItemProvider(this);
		}

		return roleSequenceWithProjectionRoleRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSubPathRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleSubPathRefItemProvider roleSubPathRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSubPathRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleSubPathRefAdapter() {
		if (roleSubPathRefItemProvider == null) {
			roleSubPathRefItemProvider = new RoleSubPathRefItemProvider(this);
		}

		return roleSubPathRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSubPathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleSubPathTypeItemProvider roleSubPathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleSubPathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleSubPathTypeAdapter() {
		if (roleSubPathTypeItemProvider == null) {
			roleSubPathTypeItemProvider = new RoleSubPathTypeItemProvider(this);
		}

		return roleSubPathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleTextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleTextTypeItemProvider roleTextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleTextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleTextTypeAdapter() {
		if (roleTextTypeItemProvider == null) {
			roleTextTypeItemProvider = new RoleTextTypeItemProvider(this);
		}

		return roleTextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleTypeItemProvider roleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleTypeAdapter() {
		if (roleTypeItemProvider == null) {
			roleTypeItemProvider = new RoleTypeItemProvider(this);
		}

		return roleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleValueRestrictionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RoleValueRestrictionTypeItemProvider roleValueRestrictionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RoleValueRestrictionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRoleValueRestrictionTypeAdapter() {
		if (roleValueRestrictionTypeItemProvider == null) {
			roleValueRestrictionTypeItemProvider = new RoleValueRestrictionTypeItemProvider(this);
		}

		return roleValueRestrictionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RootObjectTypeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RootObjectTypeRefItemProvider rootObjectTypeRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RootObjectTypeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRootObjectTypeRefAdapter() {
		if (rootObjectTypeRefItemProvider == null) {
			rootObjectTypeRefItemProvider = new RootObjectTypeRefItemProvider(this);
		}

		return rootObjectTypeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RootObjectTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RootObjectTypeTypeItemProvider rootObjectTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RootObjectTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRootObjectTypeTypeAdapter() {
		if (rootObjectTypeTypeItemProvider == null) {
			rootObjectTypeTypeItemProvider = new RootObjectTypeTypeItemProvider(this);
		}

		return rootObjectTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.RowIdOtherDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RowIdOtherDataTypeTypeItemProvider rowIdOtherDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.RowIdOtherDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRowIdOtherDataTypeTypeAdapter() {
		if (rowIdOtherDataTypeTypeItemProvider == null) {
			rowIdOtherDataTypeTypeItemProvider = new RowIdOtherDataTypeTypeItemProvider(this);
		}

		return rowIdOtherDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SetComparisonConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetComparisonConstraintRefItemProvider setComparisonConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SetComparisonConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetComparisonConstraintRefAdapter() {
		if (setComparisonConstraintRefItemProvider == null) {
			setComparisonConstraintRefItemProvider = new SetComparisonConstraintRefItemProvider(this);
		}

		return setComparisonConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SetConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SetConstraintRefItemProvider setConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SetConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSetConstraintRefAdapter() {
		if (setConstraintRefItemProvider == null) {
			setConstraintRefItemProvider = new SetConstraintRefItemProvider(this);
		}

		return setConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SignedIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignedIntegerNumericDataTypeTypeItemProvider signedIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SignedIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignedIntegerNumericDataTypeTypeAdapter() {
		if (signedIntegerNumericDataTypeTypeItemProvider == null) {
			signedIntegerNumericDataTypeTypeItemProvider = new SignedIntegerNumericDataTypeTypeItemProvider(this);
		}

		return signedIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SignedLargeIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignedLargeIntegerNumericDataTypeTypeItemProvider signedLargeIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SignedLargeIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignedLargeIntegerNumericDataTypeTypeAdapter() {
		if (signedLargeIntegerNumericDataTypeTypeItemProvider == null) {
			signedLargeIntegerNumericDataTypeTypeItemProvider = new SignedLargeIntegerNumericDataTypeTypeItemProvider(this);
		}

		return signedLargeIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SignedSmallIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignedSmallIntegerNumericDataTypeTypeItemProvider signedSmallIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SignedSmallIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignedSmallIntegerNumericDataTypeTypeAdapter() {
		if (signedSmallIntegerNumericDataTypeTypeItemProvider == null) {
			signedSmallIntegerNumericDataTypeTypeItemProvider = new SignedSmallIntegerNumericDataTypeTypeItemProvider(this);
		}

		return signedSmallIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SinglePrecisionFloatingPointNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SinglePrecisionFloatingPointNumericDataTypeTypeItemProvider singlePrecisionFloatingPointNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SinglePrecisionFloatingPointNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSinglePrecisionFloatingPointNumericDataTypeTypeAdapter() {
		if (singlePrecisionFloatingPointNumericDataTypeTypeItemProvider == null) {
			singlePrecisionFloatingPointNumericDataTypeTypeItemProvider = new SinglePrecisionFloatingPointNumericDataTypeTypeItemProvider(this);
		}

		return singlePrecisionFloatingPointNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SourceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SourceTypeItemProvider sourceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SourceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSourceTypeAdapter() {
		if (sourceTypeItemProvider == null) {
			sourceTypeItemProvider = new SourceTypeItemProvider(this);
		}

		return sourceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubPathsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubPathsTypeItemProvider subPathsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubPathsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubPathsTypeAdapter() {
		if (subPathsTypeItemProvider == null) {
			subPathsTypeItemProvider = new SubPathsTypeItemProvider(this);
		}

		return subPathsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueriesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubqueriesTypeItemProvider subqueriesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueriesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubqueriesTypeAdapter() {
		if (subqueriesTypeItemProvider == null) {
			subqueriesTypeItemProvider = new SubqueriesTypeItemProvider(this);
		}

		return subqueriesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryParameterInputsForType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubqueryParameterInputsForTypeItemProvider subqueryParameterInputsForTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryParameterInputsForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubqueryParameterInputsForTypeAdapter() {
		if (subqueryParameterInputsForTypeItemProvider == null) {
			subqueryParameterInputsForTypeItemProvider = new SubqueryParameterInputsForTypeItemProvider(this);
		}

		return subqueryParameterInputsForTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryParameterInputsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubqueryParameterInputsTypeItemProvider subqueryParameterInputsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryParameterInputsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubqueryParameterInputsTypeAdapter() {
		if (subqueryParameterInputsTypeItemProvider == null) {
			subqueryParameterInputsTypeItemProvider = new SubqueryParameterInputsTypeItemProvider(this);
		}

		return subqueryParameterInputsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryParameterInputType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubqueryParameterInputTypeItemProvider subqueryParameterInputTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryParameterInputType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubqueryParameterInputTypeAdapter() {
		if (subqueryParameterInputTypeItemProvider == null) {
			subqueryParameterInputTypeItemProvider = new SubqueryParameterInputTypeItemProvider(this);
		}

		return subqueryParameterInputTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubqueryRefItemProvider subqueryRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubqueryRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubqueryRefAdapter() {
		if (subqueryRefItemProvider == null) {
			subqueryRefItemProvider = new SubqueryRefItemProvider(this);
		}

		return subqueryRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubsetConstraintImpliedByMandatoryConstraintsErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider subsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubsetConstraintImpliedByMandatoryConstraintsErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubsetConstraintImpliedByMandatoryConstraintsErrorTypeAdapter() {
		if (subsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider == null) {
			subsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider = new SubsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider(this);
		}

		return subsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubsetConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubsetConstraintRefItemProvider subsetConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubsetConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubsetConstraintRefAdapter() {
		if (subsetConstraintRefItemProvider == null) {
			subsetConstraintRefItemProvider = new SubsetConstraintRefItemProvider(this);
		}

		return subsetConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubsetConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubsetConstraintTypeItemProvider subsetConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubsetConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubsetConstraintTypeAdapter() {
		if (subsetConstraintTypeItemProvider == null) {
			subsetConstraintTypeItemProvider = new SubsetConstraintTypeItemProvider(this);
		}

		return subsetConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeDerivationPathType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubtypeDerivationPathTypeItemProvider subtypeDerivationPathTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeDerivationPathType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubtypeDerivationPathTypeAdapter() {
		if (subtypeDerivationPathTypeItemProvider == null) {
			subtypeDerivationPathTypeItemProvider = new SubtypeDerivationPathTypeItemProvider(this);
		}

		return subtypeDerivationPathTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeDerivationRuleType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubtypeDerivationRuleTypeItemProvider subtypeDerivationRuleTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeDerivationRuleType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubtypeDerivationRuleTypeAdapter() {
		if (subtypeDerivationRuleTypeItemProvider == null) {
			subtypeDerivationRuleTypeItemProvider = new SubtypeDerivationRuleTypeItemProvider(this);
		}

		return subtypeDerivationRuleTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeFactTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubtypeFactTypeTypeItemProvider subtypeFactTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeFactTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubtypeFactTypeTypeAdapter() {
		if (subtypeFactTypeTypeItemProvider == null) {
			subtypeFactTypeTypeItemProvider = new SubtypeFactTypeTypeItemProvider(this);
		}

		return subtypeFactTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeRolesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SubtypeRolesTypeItemProvider subtypeRolesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SubtypeRolesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSubtypeRolesTypeAdapter() {
		if (subtypeRolesTypeItemProvider == null) {
			subtypeRolesTypeItemProvider = new SubtypeRolesTypeItemProvider(this);
		}

		return subtypeRolesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.SupersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SupersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider supersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.SupersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSupersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeAdapter() {
		if (supersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider == null) {
			supersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider = new SupersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider(this);
		}

		return supersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TimeTemporalDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeTemporalDataTypeTypeItemProvider timeTemporalDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TimeTemporalDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeTemporalDataTypeTypeAdapter() {
		if (timeTemporalDataTypeTypeItemProvider == null) {
			timeTemporalDataTypeTypeItemProvider = new TimeTemporalDataTypeTypeItemProvider(this);
		}

		return timeTemporalDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewEntityTypeRoleInstancesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TooFewEntityTypeRoleInstancesErrorTypeItemProvider tooFewEntityTypeRoleInstancesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewEntityTypeRoleInstancesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTooFewEntityTypeRoleInstancesErrorTypeAdapter() {
		if (tooFewEntityTypeRoleInstancesErrorTypeItemProvider == null) {
			tooFewEntityTypeRoleInstancesErrorTypeItemProvider = new TooFewEntityTypeRoleInstancesErrorTypeItemProvider(this);
		}

		return tooFewEntityTypeRoleInstancesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewFactTypeRoleInstancesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TooFewFactTypeRoleInstancesErrorTypeItemProvider tooFewFactTypeRoleInstancesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewFactTypeRoleInstancesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTooFewFactTypeRoleInstancesErrorTypeAdapter() {
		if (tooFewFactTypeRoleInstancesErrorTypeItemProvider == null) {
			tooFewFactTypeRoleInstancesErrorTypeItemProvider = new TooFewFactTypeRoleInstancesErrorTypeItemProvider(this);
		}

		return tooFewFactTypeRoleInstancesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewReadingRolesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TooFewReadingRolesErrorTypeItemProvider tooFewReadingRolesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewReadingRolesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTooFewReadingRolesErrorTypeAdapter() {
		if (tooFewReadingRolesErrorTypeItemProvider == null) {
			tooFewReadingRolesErrorTypeItemProvider = new TooFewReadingRolesErrorTypeItemProvider(this);
		}

		return tooFewReadingRolesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewRoleSequencesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TooFewRoleSequencesErrorTypeItemProvider tooFewRoleSequencesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TooFewRoleSequencesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTooFewRoleSequencesErrorTypeAdapter() {
		if (tooFewRoleSequencesErrorTypeItemProvider == null) {
			tooFewRoleSequencesErrorTypeItemProvider = new TooFewRoleSequencesErrorTypeItemProvider(this);
		}

		return tooFewRoleSequencesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TooManyReadingRolesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TooManyReadingRolesErrorTypeItemProvider tooManyReadingRolesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TooManyReadingRolesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTooManyReadingRolesErrorTypeAdapter() {
		if (tooManyReadingRolesErrorTypeItemProvider == null) {
			tooManyReadingRolesErrorTypeItemProvider = new TooManyReadingRolesErrorTypeItemProvider(this);
		}

		return tooManyReadingRolesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TooManyRoleSequencesErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TooManyRoleSequencesErrorTypeItemProvider tooManyRoleSequencesErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TooManyRoleSequencesErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTooManyRoleSequencesErrorTypeAdapter() {
		if (tooManyRoleSequencesErrorTypeItemProvider == null) {
			tooManyRoleSequencesErrorTypeItemProvider = new TooManyRoleSequencesErrorTypeItemProvider(this);
		}

		return tooManyRoleSequencesErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.TrueOrFalseLogicalDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TrueOrFalseLogicalDataTypeTypeItemProvider trueOrFalseLogicalDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.TrueOrFalseLogicalDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTrueOrFalseLogicalDataTypeTypeAdapter() {
		if (trueOrFalseLogicalDataTypeTypeItemProvider == null) {
			trueOrFalseLogicalDataTypeTypeItemProvider = new TrueOrFalseLogicalDataTypeTypeItemProvider(this);
		}

		return trueOrFalseLogicalDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UnaryRoleCardinalityRestrictionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryRoleCardinalityRestrictionTypeItemProvider unaryRoleCardinalityRestrictionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UnaryRoleCardinalityRestrictionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryRoleCardinalityRestrictionTypeAdapter() {
		if (unaryRoleCardinalityRestrictionTypeItemProvider == null) {
			unaryRoleCardinalityRestrictionTypeItemProvider = new UnaryRoleCardinalityRestrictionTypeItemProvider(this);
		}

		return unaryRoleCardinalityRestrictionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UniquenessConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniquenessConstraintRefItemProvider uniquenessConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UniquenessConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniquenessConstraintRefAdapter() {
		if (uniquenessConstraintRefItemProvider == null) {
			uniquenessConstraintRefItemProvider = new UniquenessConstraintRefItemProvider(this);
		}

		return uniquenessConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UniquenessConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UniquenessConstraintTypeItemProvider uniquenessConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UniquenessConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUniquenessConstraintTypeAdapter() {
		if (uniquenessConstraintTypeItemProvider == null) {
			uniquenessConstraintTypeItemProvider = new UniquenessConstraintTypeItemProvider(this);
		}

		return uniquenessConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsignedIntegerNumericDataTypeTypeItemProvider unsignedIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsignedIntegerNumericDataTypeTypeAdapter() {
		if (unsignedIntegerNumericDataTypeTypeItemProvider == null) {
			unsignedIntegerNumericDataTypeTypeItemProvider = new UnsignedIntegerNumericDataTypeTypeItemProvider(this);
		}

		return unsignedIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedLargeIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsignedLargeIntegerNumericDataTypeTypeItemProvider unsignedLargeIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedLargeIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsignedLargeIntegerNumericDataTypeTypeAdapter() {
		if (unsignedLargeIntegerNumericDataTypeTypeItemProvider == null) {
			unsignedLargeIntegerNumericDataTypeTypeItemProvider = new UnsignedLargeIntegerNumericDataTypeTypeItemProvider(this);
		}

		return unsignedLargeIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedSmallIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsignedSmallIntegerNumericDataTypeTypeItemProvider unsignedSmallIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedSmallIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsignedSmallIntegerNumericDataTypeTypeAdapter() {
		if (unsignedSmallIntegerNumericDataTypeTypeItemProvider == null) {
			unsignedSmallIntegerNumericDataTypeTypeItemProvider = new UnsignedSmallIntegerNumericDataTypeTypeItemProvider(this);
		}

		return unsignedSmallIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedTinyIntegerNumericDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnsignedTinyIntegerNumericDataTypeTypeItemProvider unsignedTinyIntegerNumericDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UnsignedTinyIntegerNumericDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnsignedTinyIntegerNumericDataTypeTypeAdapter() {
		if (unsignedTinyIntegerNumericDataTypeTypeItemProvider == null) {
			unsignedTinyIntegerNumericDataTypeTypeItemProvider = new UnsignedTinyIntegerNumericDataTypeTypeItemProvider(this);
		}

		return unsignedTinyIntegerNumericDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.UnspecifiedDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnspecifiedDataTypeTypeItemProvider unspecifiedDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.UnspecifiedDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnspecifiedDataTypeTypeAdapter() {
		if (unspecifiedDataTypeTypeItemProvider == null) {
			unspecifiedDataTypeTypeItemProvider = new UnspecifiedDataTypeTypeItemProvider(this);
		}

		return unspecifiedDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonConstraintOperatorNotSpecifiedErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider valueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonConstraintOperatorNotSpecifiedErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueComparisonConstraintOperatorNotSpecifiedErrorTypeAdapter() {
		if (valueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider == null) {
			valueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider = new ValueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider(this);
		}

		return valueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueComparisonConstraintRefItemProvider valueComparisonConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueComparisonConstraintRefAdapter() {
		if (valueComparisonConstraintRefItemProvider == null) {
			valueComparisonConstraintRefItemProvider = new ValueComparisonConstraintRefItemProvider(this);
		}

		return valueComparisonConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueComparisonConstraintTypeItemProvider valueComparisonConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueComparisonConstraintTypeAdapter() {
		if (valueComparisonConstraintTypeItemProvider == null) {
			valueComparisonConstraintTypeItemProvider = new ValueComparisonConstraintTypeItemProvider(this);
		}

		return valueComparisonConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonRolesNotComparableErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueComparisonRolesNotComparableErrorTypeItemProvider valueComparisonRolesNotComparableErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueComparisonRolesNotComparableErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueComparisonRolesNotComparableErrorTypeAdapter() {
		if (valueComparisonRolesNotComparableErrorTypeItemProvider == null) {
			valueComparisonRolesNotComparableErrorTypeItemProvider = new ValueComparisonRolesNotComparableErrorTypeItemProvider(this);
		}

		return valueComparisonRolesNotComparableErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueConstraintRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueConstraintRefItemProvider valueConstraintRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueConstraintRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueConstraintRefAdapter() {
		if (valueConstraintRefItemProvider == null) {
			valueConstraintRefItemProvider = new ValueConstraintRefItemProvider(this);
		}

		return valueConstraintRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueConstraintTypeItemProvider valueConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueConstraintTypeAdapter() {
		if (valueConstraintTypeItemProvider == null) {
			valueConstraintTypeItemProvider = new ValueConstraintTypeItemProvider(this);
		}

		return valueConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueConstraintWithNameType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueConstraintWithNameTypeItemProvider valueConstraintWithNameTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueConstraintWithNameType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueConstraintWithNameTypeAdapter() {
		if (valueConstraintWithNameTypeItemProvider == null) {
			valueConstraintWithNameTypeItemProvider = new ValueConstraintWithNameTypeItemProvider(this);
		}

		return valueConstraintWithNameTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangeOverlapErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueRangeOverlapErrorTypeItemProvider valueRangeOverlapErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangeOverlapErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueRangeOverlapErrorTypeAdapter() {
		if (valueRangeOverlapErrorTypeItemProvider == null) {
			valueRangeOverlapErrorTypeItemProvider = new ValueRangeOverlapErrorTypeItemProvider(this);
		}

		return valueRangeOverlapErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangeRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueRangeRefItemProvider valueRangeRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangeRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueRangeRefAdapter() {
		if (valueRangeRefItemProvider == null) {
			valueRangeRefItemProvider = new ValueRangeRefItemProvider(this);
		}

		return valueRangeRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueRangesTypeItemProvider valueRangesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueRangesTypeAdapter() {
		if (valueRangesTypeItemProvider == null) {
			valueRangesTypeItemProvider = new ValueRangesTypeItemProvider(this);
		}

		return valueRangesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueRangeTypeItemProvider valueRangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueRangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueRangeTypeAdapter() {
		if (valueRangeTypeItemProvider == null) {
			valueRangeTypeItemProvider = new ValueRangeTypeItemProvider(this);
		}

		return valueRangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeDetachedErrorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeDetachedErrorTypeItemProvider valueTypeDetachedErrorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeDetachedErrorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeDetachedErrorTypeAdapter() {
		if (valueTypeDetachedErrorTypeItemProvider == null) {
			valueTypeDetachedErrorTypeItemProvider = new ValueTypeDetachedErrorTypeItemProvider(this);
		}

		return valueTypeDetachedErrorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeInstanceRef} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeInstanceRefItemProvider valueTypeInstanceRefItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeInstanceRef}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeInstanceRefAdapter() {
		if (valueTypeInstanceRefItemProvider == null) {
			valueTypeInstanceRefItemProvider = new ValueTypeInstanceRefItemProvider(this);
		}

		return valueTypeInstanceRefItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeInstanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeInstanceTypeItemProvider valueTypeInstanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeInstanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeInstanceTypeAdapter() {
		if (valueTypeInstanceTypeItemProvider == null) {
			valueTypeInstanceTypeItemProvider = new ValueTypeInstanceTypeItemProvider(this);
		}

		return valueTypeInstanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeTypeItemProvider valueTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeTypeAdapter() {
		if (valueTypeTypeItemProvider == null) {
			valueTypeTypeItemProvider = new ValueTypeTypeItemProvider(this);
		}

		return valueTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeValueRestrictionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueTypeValueRestrictionTypeItemProvider valueTypeValueRestrictionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.ValueTypeValueRestrictionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueTypeValueRestrictionTypeAdapter() {
		if (valueTypeValueRestrictionTypeItemProvider == null) {
			valueTypeValueRestrictionTypeItemProvider = new ValueTypeValueRestrictionTypeItemProvider(this);
		}

		return valueTypeValueRestrictionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.VariableLengthRawDataDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableLengthRawDataDataTypeTypeItemProvider variableLengthRawDataDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.VariableLengthRawDataDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableLengthRawDataDataTypeTypeAdapter() {
		if (variableLengthRawDataDataTypeTypeItemProvider == null) {
			variableLengthRawDataDataTypeTypeItemProvider = new VariableLengthRawDataDataTypeTypeItemProvider(this);
		}

		return variableLengthRawDataDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.VariableLengthTextDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableLengthTextDataTypeTypeItemProvider variableLengthTextDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.VariableLengthTextDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableLengthTextDataTypeTypeAdapter() {
		if (variableLengthTextDataTypeTypeItemProvider == null) {
			variableLengthTextDataTypeTypeItemProvider = new VariableLengthTextDataTypeTypeItemProvider(this);
		}

		return variableLengthTextDataTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.neumont.schemas.orm._2006._04.orm.core.YesOrNoLogicalDataTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected YesOrNoLogicalDataTypeTypeItemProvider yesOrNoLogicalDataTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.neumont.schemas.orm._2006._04.orm.core.YesOrNoLogicalDataTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createYesOrNoLogicalDataTypeTypeAdapter() {
		if (yesOrNoLogicalDataTypeTypeItemProvider == null) {
			yesOrNoLogicalDataTypeTypeItemProvider = new YesOrNoLogicalDataTypeTypeItemProvider(this);
		}

		return yesOrNoLogicalDataTypeTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (aggregationContextTypeItemProvider != null) aggregationContextTypeItemProvider.dispose();
		if (aliasesTypeItemProvider != null) aliasesTypeItemProvider.dispose();
		if (aliasTypeItemProvider != null) aliasTypeItemProvider.dispose();
		if (autoCounterNumericDataTypeTypeItemProvider != null) autoCounterNumericDataTypeTypeItemProvider.dispose();
		if (autoTimestampTemporalDataTypeTypeItemProvider != null) autoTimestampTemporalDataTypeTypeItemProvider.dispose();
		if (boundToTypeItemProvider != null) boundToTypeItemProvider.dispose();
		if (calculatedPathValueMustBeConsumedErrorTypeItemProvider != null) calculatedPathValueMustBeConsumedErrorTypeItemProvider.dispose();
		if (calculatedPathValueParameterBindingErrorTypeItemProvider != null) calculatedPathValueParameterBindingErrorTypeItemProvider.dispose();
		if (calculatedPathValueRequiresAggregationContextErrorTypeItemProvider != null) calculatedPathValueRequiresAggregationContextErrorTypeItemProvider.dispose();
		if (calculatedPathValueRequiresFunctionErrorTypeItemProvider != null) calculatedPathValueRequiresFunctionErrorTypeItemProvider.dispose();
		if (calculatedValueInputTypeItemProvider != null) calculatedValueInputTypeItemProvider.dispose();
		if (calculatedValueRefItemProvider != null) calculatedValueRefItemProvider.dispose();
		if (calculatedValuesTypeItemProvider != null) calculatedValuesTypeItemProvider.dispose();
		if (calculatedValuesType1ItemProvider != null) calculatedValuesType1ItemProvider.dispose();
		if (calculatedValueTypeItemProvider != null) calculatedValueTypeItemProvider.dispose();
		if (calculatedValueType1ItemProvider != null) calculatedValueType1ItemProvider.dispose();
		if (cardinalityConstraintRefItemProvider != null) cardinalityConstraintRefItemProvider.dispose();
		if (cardinalityConstraintTypeItemProvider != null) cardinalityConstraintTypeItemProvider.dispose();
		if (cardinalityRangeOverlapErrorTypeItemProvider != null) cardinalityRangeOverlapErrorTypeItemProvider.dispose();
		if (cardinalityRangesTypeItemProvider != null) cardinalityRangesTypeItemProvider.dispose();
		if (cardinalityRangeTypeItemProvider != null) cardinalityRangeTypeItemProvider.dispose();
		if (compatibleRolePlayerTypeErrorTypeItemProvider != null) compatibleRolePlayerTypeErrorTypeItemProvider.dispose();
		if (compatibleSupertypesErrorTypeItemProvider != null) compatibleSupertypesErrorTypeItemProvider.dispose();
		if (compatibleValueTypeInstanceValueErrorTypeItemProvider != null) compatibleValueTypeInstanceValueErrorTypeItemProvider.dispose();
		if (conditionsTypeItemProvider != null) conditionsTypeItemProvider.dispose();
		if (constraintDuplicateNameErrorTypeItemProvider != null) constraintDuplicateNameErrorTypeItemProvider.dispose();
		if (constraintRoleProjectionRefItemProvider != null) constraintRoleProjectionRefItemProvider.dispose();
		if (constraintRoleProjectionTypeItemProvider != null) constraintRoleProjectionTypeItemProvider.dispose();
		if (constraintRoleSequenceJoinPathRefItemProvider != null) constraintRoleSequenceJoinPathRefItemProvider.dispose();
		if (constraintRoleSequenceJoinPathTypeItemProvider != null) constraintRoleSequenceJoinPathTypeItemProvider.dispose();
		if (constraintRoleSequenceRefItemProvider != null) constraintRoleSequenceRefItemProvider.dispose();
		if (constraintRoleSequencesTypeItemProvider != null) constraintRoleSequencesTypeItemProvider.dispose();
		if (constraintRoleSequenceTypeItemProvider != null) constraintRoleSequenceTypeItemProvider.dispose();
		if (constraintRoleSequenceWithJoinAndIdTypeItemProvider != null) constraintRoleSequenceWithJoinAndIdTypeItemProvider.dispose();
		if (constraintRoleSequenceWithJoinTypeItemProvider != null) constraintRoleSequenceWithJoinTypeItemProvider.dispose();
		if (constraintsTypeItemProvider != null) constraintsTypeItemProvider.dispose();
		if (constraintsType1ItemProvider != null) constraintsType1ItemProvider.dispose();
		if (constraintsType2ItemProvider != null) constraintsType2ItemProvider.dispose();
		if (constraintsType3ItemProvider != null) constraintsType3ItemProvider.dispose();
		if (constraintsType4ItemProvider != null) constraintsType4ItemProvider.dispose();
		if (constraintsType5ItemProvider != null) constraintsType5ItemProvider.dispose();
		if (correlatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider != null) correlatedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider.dispose();
		if (customReferenceModesTypeItemProvider != null) customReferenceModesTypeItemProvider.dispose();
		if (customReferenceModeTypeItemProvider != null) customReferenceModeTypeItemProvider.dispose();
		if (dataTypeNotSpecifiedErrorTypeItemProvider != null) dataTypeNotSpecifiedErrorTypeItemProvider.dispose();
		if (dataTypeRefItemProvider != null) dataTypeRefItemProvider.dispose();
		if (dataTypeRefRefItemProvider != null) dataTypeRefRefItemProvider.dispose();
		if (dataTypesTypeItemProvider != null) dataTypesTypeItemProvider.dispose();
		if (dateAndTimeTemporalDataTypeTypeItemProvider != null) dateAndTimeTemporalDataTypeTypeItemProvider.dispose();
		if (dateTemporalDataTypeTypeItemProvider != null) dateTemporalDataTypeTypeItemProvider.dispose();
		if (decimalNumericDataTypeTypeItemProvider != null) decimalNumericDataTypeTypeItemProvider.dispose();
		if (definitionsTypeItemProvider != null) definitionsTypeItemProvider.dispose();
		if (definitionTypeItemProvider != null) definitionTypeItemProvider.dispose();
		if (derivationExpressionTypeItemProvider != null) derivationExpressionTypeItemProvider.dispose();
		if (derivationProjectionsTypeItemProvider != null) derivationProjectionsTypeItemProvider.dispose();
		if (derivationProjectionsType1ItemProvider != null) derivationProjectionsType1ItemProvider.dispose();
		if (derivationSourceTypeItemProvider != null) derivationSourceTypeItemProvider.dispose();
		if (derivationSourceType1ItemProvider != null) derivationSourceType1ItemProvider.dispose();
		if (derivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider != null) derivedFactTypeRoleProjectionCompatibilityErrorTypeItemProvider.dispose();
		if (derivedRoleProjectionRefItemProvider != null) derivedRoleProjectionRefItemProvider.dispose();
		if (derivedRoleProjectionTypeItemProvider != null) derivedRoleProjectionTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (doublePrecisionFloatingPointNumericDataTypeTypeItemProvider != null) doublePrecisionFloatingPointNumericDataTypeTypeItemProvider.dispose();
		if (duplicateReadingSignatureErrorTypeItemProvider != null) duplicateReadingSignatureErrorTypeItemProvider.dispose();
		if (dynamicColorTypeItemProvider != null) dynamicColorTypeItemProvider.dispose();
		if (elementRefItemProvider != null) elementRefItemProvider.dispose();
		if (entityTypeInstanceRefItemProvider != null) entityTypeInstanceRefItemProvider.dispose();
		if (entityTypeInstancesTypeItemProvider != null) entityTypeInstancesTypeItemProvider.dispose();
		if (entityTypeInstanceTypeItemProvider != null) entityTypeInstanceTypeItemProvider.dispose();
		if (entityTypeRequiresReferenceSchemeErrorTypeItemProvider != null) entityTypeRequiresReferenceSchemeErrorTypeItemProvider.dispose();
		if (entityTypeRoleInstancesTypeItemProvider != null) entityTypeRoleInstancesTypeItemProvider.dispose();
		if (entityTypeSubtypeInstanceRefItemProvider != null) entityTypeSubtypeInstanceRefItemProvider.dispose();
		if (entityTypeSubtypeInstanceTypeItemProvider != null) entityTypeSubtypeInstanceTypeItemProvider.dispose();
		if (entityTypeTypeItemProvider != null) entityTypeTypeItemProvider.dispose();
		if (equalityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider != null) equalityConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider.dispose();
		if (equalityConstraintRefItemProvider != null) equalityConstraintRefItemProvider.dispose();
		if (equalityConstraintTypeItemProvider != null) equalityConstraintTypeItemProvider.dispose();
		if (equalityImpliedByMandatoryErrorTypeItemProvider != null) equalityImpliedByMandatoryErrorTypeItemProvider.dispose();
		if (exclusionConstraintRefItemProvider != null) exclusionConstraintRefItemProvider.dispose();
		if (exclusionConstraintTypeItemProvider != null) exclusionConstraintTypeItemProvider.dispose();
		if (exclusionContradictsEqualityErrorTypeItemProvider != null) exclusionContradictsEqualityErrorTypeItemProvider.dispose();
		if (exclusionContradictsMandatoryErrorTypeItemProvider != null) exclusionContradictsMandatoryErrorTypeItemProvider.dispose();
		if (exclusionContradictsSubsetErrorTypeItemProvider != null) exclusionContradictsSubsetErrorTypeItemProvider.dispose();
		if (expandedDataTypeItemProvider != null) expandedDataTypeItemProvider.dispose();
		if (extensionsTypeItemProvider != null) extensionsTypeItemProvider.dispose();
		if (externalConstraintRoleSequenceArityMismatchErrorTypeItemProvider != null) externalConstraintRoleSequenceArityMismatchErrorTypeItemProvider.dispose();
		if (factRolesTypeItemProvider != null) factRolesTypeItemProvider.dispose();
		if (factTypeDerivationExpressionTypeItemProvider != null) factTypeDerivationExpressionTypeItemProvider.dispose();
		if (factTypeDerivationPathRefItemProvider != null) factTypeDerivationPathRefItemProvider.dispose();
		if (factTypeDerivationPathTypeItemProvider != null) factTypeDerivationPathTypeItemProvider.dispose();
		if (factTypeDerivationProjectionRefItemProvider != null) factTypeDerivationProjectionRefItemProvider.dispose();
		if (factTypeDerivationRequiresProjectionErrorTypeItemProvider != null) factTypeDerivationRequiresProjectionErrorTypeItemProvider.dispose();
		if (factTypeDerivationRuleTypeItemProvider != null) factTypeDerivationRuleTypeItemProvider.dispose();
		if (factTypeInstanceRefItemProvider != null) factTypeInstanceRefItemProvider.dispose();
		if (factTypeInstancesTypeItemProvider != null) factTypeInstancesTypeItemProvider.dispose();
		if (factTypeInstanceTypeItemProvider != null) factTypeInstanceTypeItemProvider.dispose();
		if (factTypeRefItemProvider != null) factTypeRefItemProvider.dispose();
		if (factTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider != null) factTypeRequiresInternalUniquenessConstraintErrorTypeItemProvider.dispose();
		if (factTypeRequiresReadingErrorTypeItemProvider != null) factTypeRequiresReadingErrorTypeItemProvider.dispose();
		if (factTypeRoleInstancesTypeItemProvider != null) factTypeRoleInstancesTypeItemProvider.dispose();
		if (factTypesTypeItemProvider != null) factTypesTypeItemProvider.dispose();
		if (factTypeTypeItemProvider != null) factTypeTypeItemProvider.dispose();
		if (fixedLengthRawDataDataTypeTypeItemProvider != null) fixedLengthRawDataDataTypeTypeItemProvider.dispose();
		if (fixedLengthTextDataTypeTypeItemProvider != null) fixedLengthTextDataTypeTypeItemProvider.dispose();
		if (floatingPointNumericDataTypeTypeItemProvider != null) floatingPointNumericDataTypeTypeItemProvider.dispose();
		if (frequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider != null) frequencyConstraintContradictsInternalUniquenessConstraintErrorTypeItemProvider.dispose();
		if (frequencyConstraintExactlyOneErrorTypeItemProvider != null) frequencyConstraintExactlyOneErrorTypeItemProvider.dispose();
		if (frequencyConstraintMinMaxErrorTypeItemProvider != null) frequencyConstraintMinMaxErrorTypeItemProvider.dispose();
		if (frequencyConstraintNonRestrictiveRangeErrorTypeItemProvider != null) frequencyConstraintNonRestrictiveRangeErrorTypeItemProvider.dispose();
		if (frequencyConstraintRefItemProvider != null) frequencyConstraintRefItemProvider.dispose();
		if (frequencyConstraintTypeItemProvider != null) frequencyConstraintTypeItemProvider.dispose();
		if (frequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider != null) frequencyConstraintViolatedByUniquenessConstraintErrorTypeItemProvider.dispose();
		if (functionDuplicateNameErrorTypeItemProvider != null) functionDuplicateNameErrorTypeItemProvider.dispose();
		if (functionParameterRefItemProvider != null) functionParameterRefItemProvider.dispose();
		if (functionParameterTypeItemProvider != null) functionParameterTypeItemProvider.dispose();
		if (functionRefItemProvider != null) functionRefItemProvider.dispose();
		if (functionsTypeItemProvider != null) functionsTypeItemProvider.dispose();
		if (functionsType1ItemProvider != null) functionsType1ItemProvider.dispose();
		if (functionTypeItemProvider != null) functionTypeItemProvider.dispose();
		if (generationSettingsTypeItemProvider != null) generationSettingsTypeItemProvider.dispose();
		if (generationSettingTypeItemProvider != null) generationSettingTypeItemProvider.dispose();
		if (generationStateTypeItemProvider != null) generationStateTypeItemProvider.dispose();
		if (groupDuplicateNameErrorTypeItemProvider != null) groupDuplicateNameErrorTypeItemProvider.dispose();
		if (groupElementsTypeItemProvider != null) groupElementsTypeItemProvider.dispose();
		if (groupingTypeItemProvider != null) groupingTypeItemProvider.dispose();
		if (groupMembershipContradictionErrorTypeItemProvider != null) groupMembershipContradictionErrorTypeItemProvider.dispose();
		if (groupRefItemProvider != null) groupRefItemProvider.dispose();
		if (groupsTypeItemProvider != null) groupsTypeItemProvider.dispose();
		if (groupsType1ItemProvider != null) groupsType1ItemProvider.dispose();
		if (groupTypeItemProvider != null) groupTypeItemProvider.dispose();
		if (groupType1ItemProvider != null) groupType1ItemProvider.dispose();
		if (groupTypesTypeItemProvider != null) groupTypesTypeItemProvider.dispose();
		if (groupTypeTypeItemProvider != null) groupTypeTypeItemProvider.dispose();
		if (implicationErrorTypeItemProvider != null) implicationErrorTypeItemProvider.dispose();
		if (impliedFactRolesTypeItemProvider != null) impliedFactRolesTypeItemProvider.dispose();
		if (impliedFactTypeTypeItemProvider != null) impliedFactTypeTypeItemProvider.dispose();
		if (impliedInternalUniquenessConstraintErrorTypeItemProvider != null) impliedInternalUniquenessConstraintErrorTypeItemProvider.dispose();
		if (informalDerivationRuleTypeItemProvider != null) informalDerivationRuleTypeItemProvider.dispose();
		if (inputFromTypeItemProvider != null) inputFromTypeItemProvider.dispose();
		if (inputsTypeItemProvider != null) inputsTypeItemProvider.dispose();
		if (instancesTypeItemProvider != null) instancesTypeItemProvider.dispose();
		if (internalConstraintsTypeItemProvider != null) internalConstraintsTypeItemProvider.dispose();
		if (joinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider != null) joinedConstraintRoleProjectionCompatibilityErrorTypeItemProvider.dispose();
		if (joinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider != null) joinedPathRoleRequiresCompatibleRolePlayerErrorTypeItemProvider.dispose();
		if (joinPathProjectionRefItemProvider != null) joinPathProjectionRefItemProvider.dispose();
		if (joinPathProjectionsTypeItemProvider != null) joinPathProjectionsTypeItemProvider.dispose();
		if (joinPathProjectionTypeItemProvider != null) joinPathProjectionTypeItemProvider.dispose();
		if (joinPathRequiredErrorTypeItemProvider != null) joinPathRequiredErrorTypeItemProvider.dispose();
		if (joinPathRequiresProjectionErrorTypeItemProvider != null) joinPathRequiresProjectionErrorTypeItemProvider.dispose();
		if (joinRuleTypeItemProvider != null) joinRuleTypeItemProvider.dispose();
		if (largeLengthRawDataDataTypeTypeItemProvider != null) largeLengthRawDataDataTypeTypeItemProvider.dispose();
		if (largeLengthTextDataTypeTypeItemProvider != null) largeLengthTextDataTypeTypeItemProvider.dispose();
		if (leadRolePathRefItemProvider != null) leadRolePathRefItemProvider.dispose();
		if (leadRolePathTypeItemProvider != null) leadRolePathTypeItemProvider.dispose();
		if (mandatoryConstraintRefItemProvider != null) mandatoryConstraintRefItemProvider.dispose();
		if (mandatoryConstraintTypeItemProvider != null) mandatoryConstraintTypeItemProvider.dispose();
		if (maxValueMismatchErrorTypeItemProvider != null) maxValueMismatchErrorTypeItemProvider.dispose();
		if (minValueMismatchErrorTypeItemProvider != null) minValueMismatchErrorTypeItemProvider.dispose();
		if (modelErrorDisplayFilterTypeItemProvider != null) modelErrorDisplayFilterTypeItemProvider.dispose();
		if (modelErrorsTypeItemProvider != null) modelErrorsTypeItemProvider.dispose();
		if (modelNoteReferencedByTypeItemProvider != null) modelNoteReferencedByTypeItemProvider.dispose();
		if (modelNotesTypeItemProvider != null) modelNotesTypeItemProvider.dispose();
		if (modelNoteTypeItemProvider != null) modelNoteTypeItemProvider.dispose();
		if (moneyNumericDataTypeTypeItemProvider != null) moneyNumericDataTypeTypeItemProvider.dispose();
		if (nameGeneratorTypeItemProvider != null) nameGeneratorTypeItemProvider.dispose();
		if (nestedGroupsTypeItemProvider != null) nestedGroupsTypeItemProvider.dispose();
		if (nMinusOneErrorTypeItemProvider != null) nMinusOneErrorTypeItemProvider.dispose();
		if (notesTypeItemProvider != null) notesTypeItemProvider.dispose();
		if (noteTypeItemProvider != null) noteTypeItemProvider.dispose();
		if (notWellModeledSubsetAndMandatoryErrorTypeItemProvider != null) notWellModeledSubsetAndMandatoryErrorTypeItemProvider.dispose();
		if (objectIdOtherDataTypeTypeItemProvider != null) objectIdOtherDataTypeTypeItemProvider.dispose();
		if (objectificationRefItemProvider != null) objectificationRefItemProvider.dispose();
		if (objectifiedFactTypeRefItemProvider != null) objectifiedFactTypeRefItemProvider.dispose();
		if (objectifiedInstanceRequiredErrorTypeItemProvider != null) objectifiedInstanceRequiredErrorTypeItemProvider.dispose();
		if (objectifiedTypeTypeItemProvider != null) objectifiedTypeTypeItemProvider.dispose();
		if (objectifiedUnaryRoleTypeItemProvider != null) objectifiedUnaryRoleTypeItemProvider.dispose();
		if (objectifyingInstanceRequiredErrorTypeItemProvider != null) objectifyingInstanceRequiredErrorTypeItemProvider.dispose();
		if (objectsTypeItemProvider != null) objectsTypeItemProvider.dispose();
		if (objectTypeCardinalityRestrictionTypeItemProvider != null) objectTypeCardinalityRestrictionTypeItemProvider.dispose();
		if (objectTypeDuplicateNameErrorTypeItemProvider != null) objectTypeDuplicateNameErrorTypeItemProvider.dispose();
		if (objectTypeInstanceRefItemProvider != null) objectTypeInstanceRefItemProvider.dispose();
		if (objectTypeRefItemProvider != null) objectTypeRefItemProvider.dispose();
		if (objectTypeRequiresPrimarySupertypeErrorTypeItemProvider != null) objectTypeRequiresPrimarySupertypeErrorTypeItemProvider.dispose();
		if (objectTypeRoleInstanceRefItemProvider != null) objectTypeRoleInstanceRefItemProvider.dispose();
		if (objectTypesTypeItemProvider != null) objectTypesTypeItemProvider.dispose();
		if (objectUnifierRefItemProvider != null) objectUnifierRefItemProvider.dispose();
		if (objectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider != null) objectUnifierRequiresCompatibleObjectTypesErrorTypeItemProvider.dispose();
		if (objectUnifiersTypeItemProvider != null) objectUnifiersTypeItemProvider.dispose();
		if (objectUnifierTypeItemProvider != null) objectUnifierTypeItemProvider.dispose();
		if (oleObjectRawDataDataTypeTypeItemProvider != null) oleObjectRawDataDataTypeTypeItemProvider.dispose();
		if (ormModelRefItemProvider != null) ormModelRefItemProvider.dispose();
		if (ormModelTypeItemProvider != null) ormModelTypeItemProvider.dispose();
		if (parametersTypeItemProvider != null) parametersTypeItemProvider.dispose();
		if (partialFactTypeDerivationProjectionErrorTypeItemProvider != null) partialFactTypeDerivationProjectionErrorTypeItemProvider.dispose();
		if (partialJoinPathProjectionErrorTypeItemProvider != null) partialJoinPathProjectionErrorTypeItemProvider.dispose();
		if (partialQueryDerivationProjectionErrorTypeItemProvider != null) partialQueryDerivationProjectionErrorTypeItemProvider.dispose();
		if (pathComponentsTypeItemProvider != null) pathComponentsTypeItemProvider.dispose();
		if (pathComponentTypeItemProvider != null) pathComponentTypeItemProvider.dispose();
		if (pathConditionRoleValueRestrictionTypeItemProvider != null) pathConditionRoleValueRestrictionTypeItemProvider.dispose();
		if (pathConditionRootValueRestrictionTypeItemProvider != null) pathConditionRootValueRestrictionTypeItemProvider.dispose();
		if (pathConstantTypeItemProvider != null) pathConstantTypeItemProvider.dispose();
		if (pathedRoleRefItemProvider != null) pathedRoleRefItemProvider.dispose();
		if (pathedRolesTypeItemProvider != null) pathedRolesTypeItemProvider.dispose();
		if (pathedRoleTypeItemProvider != null) pathedRoleTypeItemProvider.dispose();
		if (pathOuterJoinRequiresOptionalRoleErrorTypeItemProvider != null) pathOuterJoinRequiresOptionalRoleErrorTypeItemProvider.dispose();
		if (pathRequiresRootObjectTypeErrorTypeItemProvider != null) pathRequiresRootObjectTypeErrorTypeItemProvider.dispose();
		if (pathSameFactTypeRoleFollowsJoinErrorTypeItemProvider != null) pathSameFactTypeRoleFollowsJoinErrorTypeItemProvider.dispose();
		if (pathStartRoleFollowsRootObjectTypeErrorTypeItemProvider != null) pathStartRoleFollowsRootObjectTypeErrorTypeItemProvider.dispose();
		if (pictureRawDataDataTypeTypeItemProvider != null) pictureRawDataDataTypeTypeItemProvider.dispose();
		if (playedRolesTypeItemProvider != null) playedRolesTypeItemProvider.dispose();
		if (populationMandatoryErrorTypeItemProvider != null) populationMandatoryErrorTypeItemProvider.dispose();
		if (populationUniquenessErrorTypeItemProvider != null) populationUniquenessErrorTypeItemProvider.dispose();
		if (preferredIdentifierRequiresMandatoryErrorTypeItemProvider != null) preferredIdentifierRequiresMandatoryErrorTypeItemProvider.dispose();
		if (projectedFromTypeItemProvider != null) projectedFromTypeItemProvider.dispose();
		if (projectedFromType1ItemProvider != null) projectedFromType1ItemProvider.dispose();
		if (queryDerivationPathRefItemProvider != null) queryDerivationPathRefItemProvider.dispose();
		if (queryDerivationPathTypeItemProvider != null) queryDerivationPathTypeItemProvider.dispose();
		if (queryDerivationRequiresProjectionErrorTypeItemProvider != null) queryDerivationRequiresProjectionErrorTypeItemProvider.dispose();
		if (queryDerivationRuleTypeItemProvider != null) queryDerivationRuleTypeItemProvider.dispose();
		if (queryParameterBindingsTypeItemProvider != null) queryParameterBindingsTypeItemProvider.dispose();
		if (queryParameterBindingTypeItemProvider != null) queryParameterBindingTypeItemProvider.dispose();
		if (queryParametersTypeItemProvider != null) queryParametersTypeItemProvider.dispose();
		if (queryParameterTypeItemProvider != null) queryParameterTypeItemProvider.dispose();
		if (queryRoleProjectionCompatibilityErrorTypeItemProvider != null) queryRoleProjectionCompatibilityErrorTypeItemProvider.dispose();
		if (queryTypeItemProvider != null) queryTypeItemProvider.dispose();
		if (readingOrdersTypeItemProvider != null) readingOrdersTypeItemProvider.dispose();
		if (readingOrderTypeItemProvider != null) readingOrderTypeItemProvider.dispose();
		if (readingRefItemProvider != null) readingRefItemProvider.dispose();
		if (readingRequiresUserModificationErrorTypeItemProvider != null) readingRequiresUserModificationErrorTypeItemProvider.dispose();
		if (readingRoleSequenceTypeItemProvider != null) readingRoleSequenceTypeItemProvider.dispose();
		if (readingsTypeItemProvider != null) readingsTypeItemProvider.dispose();
		if (readingsType1ItemProvider != null) readingsType1ItemProvider.dispose();
		if (readingTypeItemProvider != null) readingTypeItemProvider.dispose();
		if (recognizedPhraseDuplicateNameErrorTypeItemProvider != null) recognizedPhraseDuplicateNameErrorTypeItemProvider.dispose();
		if (recognizedPhraseRefItemProvider != null) recognizedPhraseRefItemProvider.dispose();
		if (recognizedPhrasesTypeItemProvider != null) recognizedPhrasesTypeItemProvider.dispose();
		if (recognizedPhrasesType1ItemProvider != null) recognizedPhrasesType1ItemProvider.dispose();
		if (recognizedPhraseTypeItemProvider != null) recognizedPhraseTypeItemProvider.dispose();
		if (referenceModeKindRefItemProvider != null) referenceModeKindRefItemProvider.dispose();
		if (referenceModeKindsTypeItemProvider != null) referenceModeKindsTypeItemProvider.dispose();
		if (referenceModeKindTypeItemProvider != null) referenceModeKindTypeItemProvider.dispose();
		if (refinementsTypeItemProvider != null) refinementsTypeItemProvider.dispose();
		if (ringConstraintRefItemProvider != null) ringConstraintRefItemProvider.dispose();
		if (ringConstraintTypeItemProvider != null) ringConstraintTypeItemProvider.dispose();
		if (ringConstraintTypeNotSpecifiedErrorTypeItemProvider != null) ringConstraintTypeNotSpecifiedErrorTypeItemProvider.dispose();
		if (roleBasedDerivationProjectionTypeItemProvider != null) roleBasedDerivationProjectionTypeItemProvider.dispose();
		if (roleInstancesTypeItemProvider != null) roleInstancesTypeItemProvider.dispose();
		if (roleInstancesType1ItemProvider != null) roleInstancesType1ItemProvider.dispose();
		if (roleInstanceTypeItemProvider != null) roleInstanceTypeItemProvider.dispose();
		if (rolePlayerRequiredErrorTypeItemProvider != null) rolePlayerRequiredErrorTypeItemProvider.dispose();
		if (roleProxyTypeItemProvider != null) roleProxyTypeItemProvider.dispose();
		if (roleRefItemProvider != null) roleRefItemProvider.dispose();
		if (roleSequenceRoleRefItemProvider != null) roleSequenceRoleRefItemProvider.dispose();
		if (roleSequenceWithProjectionRoleRefItemProvider != null) roleSequenceWithProjectionRoleRefItemProvider.dispose();
		if (roleSubPathRefItemProvider != null) roleSubPathRefItemProvider.dispose();
		if (roleSubPathTypeItemProvider != null) roleSubPathTypeItemProvider.dispose();
		if (roleTextTypeItemProvider != null) roleTextTypeItemProvider.dispose();
		if (roleTypeItemProvider != null) roleTypeItemProvider.dispose();
		if (roleValueRestrictionTypeItemProvider != null) roleValueRestrictionTypeItemProvider.dispose();
		if (rootObjectTypeRefItemProvider != null) rootObjectTypeRefItemProvider.dispose();
		if (rootObjectTypeTypeItemProvider != null) rootObjectTypeTypeItemProvider.dispose();
		if (rowIdOtherDataTypeTypeItemProvider != null) rowIdOtherDataTypeTypeItemProvider.dispose();
		if (setComparisonConstraintRefItemProvider != null) setComparisonConstraintRefItemProvider.dispose();
		if (setConstraintRefItemProvider != null) setConstraintRefItemProvider.dispose();
		if (signedIntegerNumericDataTypeTypeItemProvider != null) signedIntegerNumericDataTypeTypeItemProvider.dispose();
		if (signedLargeIntegerNumericDataTypeTypeItemProvider != null) signedLargeIntegerNumericDataTypeTypeItemProvider.dispose();
		if (signedSmallIntegerNumericDataTypeTypeItemProvider != null) signedSmallIntegerNumericDataTypeTypeItemProvider.dispose();
		if (singlePrecisionFloatingPointNumericDataTypeTypeItemProvider != null) singlePrecisionFloatingPointNumericDataTypeTypeItemProvider.dispose();
		if (sourceTypeItemProvider != null) sourceTypeItemProvider.dispose();
		if (subPathsTypeItemProvider != null) subPathsTypeItemProvider.dispose();
		if (subqueriesTypeItemProvider != null) subqueriesTypeItemProvider.dispose();
		if (subqueryParameterInputsForTypeItemProvider != null) subqueryParameterInputsForTypeItemProvider.dispose();
		if (subqueryParameterInputsTypeItemProvider != null) subqueryParameterInputsTypeItemProvider.dispose();
		if (subqueryParameterInputTypeItemProvider != null) subqueryParameterInputTypeItemProvider.dispose();
		if (subqueryRefItemProvider != null) subqueryRefItemProvider.dispose();
		if (subsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider != null) subsetConstraintImpliedByMandatoryConstraintsErrorTypeItemProvider.dispose();
		if (subsetConstraintRefItemProvider != null) subsetConstraintRefItemProvider.dispose();
		if (subsetConstraintTypeItemProvider != null) subsetConstraintTypeItemProvider.dispose();
		if (subtypeDerivationPathTypeItemProvider != null) subtypeDerivationPathTypeItemProvider.dispose();
		if (subtypeDerivationRuleTypeItemProvider != null) subtypeDerivationRuleTypeItemProvider.dispose();
		if (subtypeFactTypeTypeItemProvider != null) subtypeFactTypeTypeItemProvider.dispose();
		if (subtypeRolesTypeItemProvider != null) subtypeRolesTypeItemProvider.dispose();
		if (supersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider != null) supersetRoleOfSubtypeSubsetConstraintNotSubtypeErrorTypeItemProvider.dispose();
		if (timeTemporalDataTypeTypeItemProvider != null) timeTemporalDataTypeTypeItemProvider.dispose();
		if (tooFewEntityTypeRoleInstancesErrorTypeItemProvider != null) tooFewEntityTypeRoleInstancesErrorTypeItemProvider.dispose();
		if (tooFewFactTypeRoleInstancesErrorTypeItemProvider != null) tooFewFactTypeRoleInstancesErrorTypeItemProvider.dispose();
		if (tooFewReadingRolesErrorTypeItemProvider != null) tooFewReadingRolesErrorTypeItemProvider.dispose();
		if (tooFewRoleSequencesErrorTypeItemProvider != null) tooFewRoleSequencesErrorTypeItemProvider.dispose();
		if (tooManyReadingRolesErrorTypeItemProvider != null) tooManyReadingRolesErrorTypeItemProvider.dispose();
		if (tooManyRoleSequencesErrorTypeItemProvider != null) tooManyRoleSequencesErrorTypeItemProvider.dispose();
		if (trueOrFalseLogicalDataTypeTypeItemProvider != null) trueOrFalseLogicalDataTypeTypeItemProvider.dispose();
		if (unaryRoleCardinalityRestrictionTypeItemProvider != null) unaryRoleCardinalityRestrictionTypeItemProvider.dispose();
		if (uniquenessConstraintRefItemProvider != null) uniquenessConstraintRefItemProvider.dispose();
		if (uniquenessConstraintTypeItemProvider != null) uniquenessConstraintTypeItemProvider.dispose();
		if (unsignedIntegerNumericDataTypeTypeItemProvider != null) unsignedIntegerNumericDataTypeTypeItemProvider.dispose();
		if (unsignedLargeIntegerNumericDataTypeTypeItemProvider != null) unsignedLargeIntegerNumericDataTypeTypeItemProvider.dispose();
		if (unsignedSmallIntegerNumericDataTypeTypeItemProvider != null) unsignedSmallIntegerNumericDataTypeTypeItemProvider.dispose();
		if (unsignedTinyIntegerNumericDataTypeTypeItemProvider != null) unsignedTinyIntegerNumericDataTypeTypeItemProvider.dispose();
		if (unspecifiedDataTypeTypeItemProvider != null) unspecifiedDataTypeTypeItemProvider.dispose();
		if (valueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider != null) valueComparisonConstraintOperatorNotSpecifiedErrorTypeItemProvider.dispose();
		if (valueComparisonConstraintRefItemProvider != null) valueComparisonConstraintRefItemProvider.dispose();
		if (valueComparisonConstraintTypeItemProvider != null) valueComparisonConstraintTypeItemProvider.dispose();
		if (valueComparisonRolesNotComparableErrorTypeItemProvider != null) valueComparisonRolesNotComparableErrorTypeItemProvider.dispose();
		if (valueConstraintRefItemProvider != null) valueConstraintRefItemProvider.dispose();
		if (valueConstraintTypeItemProvider != null) valueConstraintTypeItemProvider.dispose();
		if (valueConstraintWithNameTypeItemProvider != null) valueConstraintWithNameTypeItemProvider.dispose();
		if (valueRangeOverlapErrorTypeItemProvider != null) valueRangeOverlapErrorTypeItemProvider.dispose();
		if (valueRangeRefItemProvider != null) valueRangeRefItemProvider.dispose();
		if (valueRangesTypeItemProvider != null) valueRangesTypeItemProvider.dispose();
		if (valueRangeTypeItemProvider != null) valueRangeTypeItemProvider.dispose();
		if (valueTypeDetachedErrorTypeItemProvider != null) valueTypeDetachedErrorTypeItemProvider.dispose();
		if (valueTypeInstanceRefItemProvider != null) valueTypeInstanceRefItemProvider.dispose();
		if (valueTypeInstanceTypeItemProvider != null) valueTypeInstanceTypeItemProvider.dispose();
		if (valueTypeTypeItemProvider != null) valueTypeTypeItemProvider.dispose();
		if (valueTypeValueRestrictionTypeItemProvider != null) valueTypeValueRestrictionTypeItemProvider.dispose();
		if (variableLengthRawDataDataTypeTypeItemProvider != null) variableLengthRawDataDataTypeTypeItemProvider.dispose();
		if (variableLengthTextDataTypeTypeItemProvider != null) variableLengthTextDataTypeTypeItemProvider.dispose();
		if (yesOrNoLogicalDataTypeTypeItemProvider != null) yesOrNoLogicalDataTypeTypeItemProvider.dispose();
	}

}
